{"version":3,"file":"js/648.cb2216ed.js","mappings":"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","sources":["webpack://vue/./src/views/charts1/components/UserActivityChart.vue","webpack://vue/./src/views/charts1/components/UserActivityChart.vue?709a"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <div class=\"user-activity-wrapper\">\r\n      <div class=\"activity-header\">\r\n        <div class=\"stats-cards\">\r\n          <div class=\"stats-card\" v-for=\"(item, index) in statsItems\" :key=\"index\">\r\n            <div class=\"stats-icon\" :style=\"{ backgroundColor: item.color }\">\r\n              <i :class=\"item.icon\"></i>\r\n            </div>\r\n            <div class=\"stats-content\">\r\n              <div class=\"stats-label\">{{ item.label }}</div>\r\n              <div class=\"stats-value\">{{ item.value }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"filter-buttons\">\r\n          <div \r\n            v-for=\"(filter, index) in timeFilters\" \r\n            :key=\"index\"\r\n            :class=\"['filter-btn', { active: currentFilter === filter.value }]\"\r\n            @click=\"setTimeFilter(filter.value)\"\r\n          >\r\n            {{ filter.label }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"chart-area\" ref=\"chartContainer\"></div>\r\n      \r\n      <div class=\"user-distribution\">\r\n        <div class=\"distribution-item\" v-for=\"(item, index) in userDistribution\" :key=\"index\">\r\n          <div class=\"user-type\">\r\n            <div class=\"user-icon\" :style=\"{ backgroundColor: item.color }\">\r\n              <i :class=\"item.icon\"></i>\r\n            </div>\r\n            <div class=\"user-info\">\r\n              <div class=\"user-name\">{{ item.name }}</div>\r\n              <div class=\"user-count\">{{ item.count }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"distribution-bar\">\r\n            <div class=\"progress-track\">\r\n              <div class=\"progress-fill\" :style=\"{ width: `${item.percentage}%`, background: item.color }\"></div>\r\n              <div class=\"percentage-text\">{{ item.percentage }}%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, computed } from 'vue';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'UserActivityChart',\r\n  setup() {\r\n    const chartContainer = ref(null);\r\n    let chart = null;\r\n    \r\n    const totalUsers = ref('3,256');\r\n    const activeUsers = ref('1,485');\r\n    const totalLogins = ref('4,879');\r\n    \r\n    const statsItems = computed(() => [\r\n      {\r\n        label: '总用户数',\r\n        value: totalUsers.value,\r\n        color: '#36d1dc',\r\n        icon: 'el-icon-user'\r\n      },\r\n      {\r\n        label: '今日活跃用户',\r\n        value: activeUsers.value,\r\n        color: '#5b86e5',\r\n        icon: 'el-icon-data-board'\r\n      },\r\n      {\r\n        label: '今日登录次数',\r\n        value: totalLogins.value,\r\n        color: '#8884ff',\r\n        icon: 'el-icon-monitor'\r\n      }\r\n    ]);\r\n    \r\n    const timeFilters = [\r\n      { label: '今日', value: 'today' },\r\n      { label: '本周', value: 'week' },\r\n      { label: '本月', value: 'month' }\r\n    ];\r\n    \r\n    const currentFilter = ref('today');\r\n    \r\n    const userDistribution = reactive([\r\n      {\r\n        name: '教师用户',\r\n        count: '756',\r\n        percentage: 35,\r\n        color: '#36d1dc',\r\n        icon: 'el-icon-user'\r\n      },\r\n      {\r\n        name: '学生用户',\r\n        count: '2,350',\r\n        percentage: 65,\r\n        color: '#5b86e5',\r\n        icon: 'el-icon-user'\r\n      }\r\n    ]);\r\n    \r\n    const setTimeFilter = (filter) => {\r\n      currentFilter.value = filter;\r\n      updateChartData(filter);\r\n    };\r\n    \r\n    const updateChartData = (filter) => {\r\n      if (!chart) return;\r\n      \r\n      // 根据过滤器更新数据范围\r\n      let timeLabels;\r\n      let teacherData;\r\n      let studentData;\r\n      \r\n      switch (filter) {\r\n        case 'today':\r\n          timeLabels = generateHourLabels();\r\n          teacherData = generateUserActivityData(30, 0.5);\r\n          studentData = generateUserActivityData(60, 0.6);\r\n          break;\r\n        case 'week':\r\n          timeLabels = generateWeekLabels();\r\n          teacherData = generateUserActivityData(200, 0.4);\r\n          studentData = generateUserActivityData(350, 0.5);\r\n          break;\r\n        case 'month':\r\n          timeLabels = generateMonthLabels();\r\n          teacherData = generateUserActivityData(150, 0.6);\r\n          studentData = generateUserActivityData(320, 0.5);\r\n          break;\r\n      }\r\n      \r\n      chart.setOption({\r\n        xAxis: {\r\n          data: timeLabels\r\n        },\r\n        series: [\r\n          {\r\n            name: '教师活跃度',\r\n            data: teacherData\r\n          },\r\n          {\r\n            name: '学生活跃度',\r\n            data: studentData\r\n          }\r\n        ]\r\n      });\r\n    };\r\n    \r\n    // 生成过去24小时的标签\r\n    const generateHourLabels = () => {\r\n      const labels = [];\r\n      const now = new Date();\r\n      const hour = now.getHours();\r\n      \r\n      for (let i = 0; i < 24; i++) {\r\n        const h = (hour - 23 + i + 24) % 24;\r\n        labels.push(`${h}:00`);\r\n      }\r\n      \r\n      return labels;\r\n    };\r\n    \r\n    // 生成过去7天的标签\r\n    const generateWeekLabels = () => {\r\n      const labels = [];\r\n      const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n      const now = new Date();\r\n      const day = now.getDay();\r\n      \r\n      for (let i = 6; i >= 0; i--) {\r\n        const index = (day - i + 7) % 7;\r\n        labels.push(days[index]);\r\n      }\r\n      \r\n      return labels;\r\n    };\r\n    \r\n    // 生成过去30天的标签\r\n    const generateMonthLabels = () => {\r\n      const labels = [];\r\n      const now = new Date();\r\n      const today = now.getDate();\r\n      \r\n      for (let i = 29; i >= 0; i--) {\r\n        const date = new Date();\r\n        date.setDate(today - i);\r\n        labels.push(`${date.getMonth() + 1}/${date.getDate()}`);\r\n      }\r\n      \r\n      return labels;\r\n    };\r\n    \r\n    // 生成用户活跃度数据\r\n    const generateUserActivityData = (baseValue, variance) => {\r\n      const data = [];\r\n      \r\n      // 根据当前过滤器生成不同数量的数据点\r\n      const count = currentFilter.value === 'today' ? 24 : \r\n                    currentFilter.value === 'week' ? 7 : 30;\r\n      \r\n      for (let i = 0; i < count; i++) {\r\n        // 模拟工作/学习时间的数据波动\r\n        let timeFactor = 1;\r\n        \r\n        if (currentFilter.value === 'today') {\r\n          const hour = (new Date().getHours() - 23 + i + 24) % 24;\r\n          // 工作/学习时间 (8-21点) 活跃度更高\r\n          if (hour >= 8 && hour <= 21) {\r\n            timeFactor = 1.5;\r\n            // 高峰时段：上午9-11点，下午14-16点，晚上19-21点\r\n            if ((hour >= 9 && hour <= 11) || (hour >= 14 && hour <= 16) || (hour >= 19 && hour <= 21)) {\r\n              timeFactor = 2.5;\r\n            }\r\n          } else {\r\n            timeFactor = 0.3; // 深夜活跃度低\r\n          }\r\n        } else if (currentFilter.value === 'week') {\r\n          // 工作日活跃度更高\r\n          const index = (new Date().getDay() - 6 + i + 7) % 7;\r\n          if (index >= 1 && index <= 5) {\r\n            timeFactor = 1.5;\r\n          } else {\r\n            timeFactor = 0.8; // 周末活跃度低\r\n          }\r\n        }\r\n        \r\n        const randomFactor = 0.7 + Math.random() * variance;\r\n        const value = Math.round(baseValue * timeFactor * randomFactor);\r\n        data.push(value);\r\n      }\r\n      \r\n      return data;\r\n    };\r\n\r\n    const initChart = () => {\r\n      if (!chartContainer.value) return;\r\n      \r\n      chart = echarts.init(chartContainer.value);\r\n      \r\n      const timeLabels = generateHourLabels();\r\n      const teacherData = generateUserActivityData(30, 0.5);\r\n      const studentData = generateUserActivityData(60,.6);\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'line',\r\n            lineStyle: {\r\n              color: 'rgba(91, 134, 229, 0.3)',\r\n              width: 1,\r\n              type: 'solid'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['教师活跃度', '学生活跃度'],\r\n          right: 0,\r\n          top: 0,\r\n          textStyle: {\r\n            color: '#fff'\r\n          },\r\n          itemWidth: 10,\r\n          itemHeight: 10,\r\n          icon: 'circle'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          top: '50px',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: timeLabels,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n            fontSize: 10\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '活跃人数',\r\n          nameTextStyle: {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n            padding: [0, 30, 0, 0]\r\n          },\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            color: 'rgba(255, 255, 255, 0.7)'\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.1)'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '教师活跃度',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 6,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              width: 3,\r\n              color: '#36d1dc'\r\n            },\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(54, 209, 220, 0.3)' },\r\n                { offset: 1, color: 'rgba(54, 209, 220, 0.05)' }\r\n              ])\r\n            },\r\n            itemStyle: {\r\n              color: '#36d1dc',\r\n              borderColor: '#fff',\r\n              borderWidth: 1\r\n            },\r\n            emphasis: {\r\n              focus: 'series',\r\n              itemStyle: {\r\n                borderWidth: 2\r\n              }\r\n            },\r\n            data: teacherData\r\n          },\r\n          {\r\n            name: '学生活跃度',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 6,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              width: 3,\r\n              color: '#5b86e5'\r\n            },\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(91, 134, 229, 0.3)' },\r\n                { offset: 1, color: 'rgba(91, 134, 229, 0.05)' }\r\n              ])\r\n            },\r\n            itemStyle: {\r\n              color: '#5b86e5',\r\n              borderColor: '#fff',\r\n              borderWidth: 1\r\n            },\r\n            emphasis: {\r\n              focus: 'series',\r\n              itemStyle: {\r\n                borderWidth: 2\r\n              }\r\n            },\r\n            data: studentData\r\n          }\r\n        ]\r\n      };\r\n      \r\n      chart.setOption(option);\r\n      \r\n      // 添加定时器，每隔10秒更新一次数据\r\n      const updateData = () => {\r\n        // 更新统计数据\r\n        totalUsers.value = (parseInt(totalUsers.value.replace(/,/g, '')) + Math.floor(Math.random() * 10)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        activeUsers.value = (parseInt(activeUsers.value.replace(/,/g, '')) + Math.floor(Math.random() * 30) - 15).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        totalLogins.value = (parseInt(totalLogins.value.replace(/,/g, '')) + Math.floor(Math.random() * 50)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        \r\n        // 更新用户分布数据\r\n        userDistribution.forEach(item => {\r\n          item.count = (parseInt(item.count.replace(/,/g, '')) + Math.floor(Math.random() * 10) - 5).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        });\r\n        \r\n        // 计算新百分比\r\n        const teacher = parseInt(userDistribution[0].count.replace(/,/g, ''));\r\n        const student = parseInt(userDistribution[1].count.replace(/,/g, ''));\r\n        const total = teacher + student;\r\n        \r\n        userDistribution[0].percentage = Math.round(teacher / total * 100);\r\n        userDistribution[1].percentage = 100 - userDistribution[0].percentage;\r\n        \r\n        // 更新图表数据\r\n        updateChartData(currentFilter.value);\r\n      };\r\n      \r\n      const timer = setInterval(updateData, 10000);\r\n      \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    };\r\n\r\n    const handleResize = () => {\r\n      chart && chart.resize();\r\n    };\r\n\r\n    onMounted(() => {\r\n      const cleanup = initChart();\r\n      window.addEventListener('resize', handleResize);\r\n      \r\n      onUnmounted(() => {\r\n        cleanup && cleanup();\r\n        window.removeEventListener('resize', handleResize);\r\n        chart && chart.dispose();\r\n        chart = null;\r\n      });\r\n    });\r\n\r\n    return {\r\n      chartContainer,\r\n      totalUsers,\r\n      activeUsers,\r\n      totalLogins,\r\n      statsItems,\r\n      timeFilters,\r\n      currentFilter,\r\n      userDistribution,\r\n      setTimeFilter\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.chart-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.user-activity-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.activity-header {\r\n  padding: 0 0 15px;\r\n  \r\n  .stats-cards {\r\n    display: flex;\r\n    gap: 15px;\r\n    margin-bottom: 15px;\r\n    \r\n    .stats-card {\r\n      flex: 1;\r\n      background: rgba(255, 255, 255, 0.05);\r\n      border-radius: 8px;\r\n      padding: 12px;\r\n      display: flex;\r\n      align-items: center;\r\n      \r\n      .stats-icon {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 8px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-right: 12px;\r\n        \r\n        i {\r\n          color: white;\r\n          font-size: 20px;\r\n        }\r\n      }\r\n      \r\n      .stats-content {\r\n        flex: 1;\r\n        \r\n        .stats-label {\r\n          font-size: 13px;\r\n          color: rgba(255, 255, 255, 0.7);\r\n          margin-bottom: 5px;\r\n        }\r\n        \r\n        .stats-value {\r\n          font-size: 22px;\r\n          font-weight: bold;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .filter-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    \r\n    .filter-btn {\r\n      padding: 6px 16px;\r\n      border-radius: 4px;\r\n      font-size: 13px;\r\n      cursor: pointer;\r\n      background: rgba(255, 255, 255, 0.05);\r\n      color: rgba(255, 255, 255, 0.7);\r\n      transition: all 0.3s;\r\n      \r\n      &:hover {\r\n        background: rgba(255, 255, 255, 0.1);\r\n      }\r\n      \r\n      &.active {\r\n        background: rgba(91, 134, 229, 0.2);\r\n        color: #5b86e5;\r\n        position: relative;\r\n        \r\n        &::after {\r\n          content: '';\r\n          position: absolute;\r\n          bottom: 0;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          width: 20px;\r\n          height: 2px;\r\n          background: linear-gradient(90deg, #36d1dc, #5b86e5);\r\n          border-radius: 1px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.chart-area {\r\n  flex: 1;\r\n  width: 100%;\r\n  min-height: 0;\r\n}\r\n\r\n.user-distribution {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 15px 0 0;\r\n  \r\n  .distribution-item {\r\n    flex: 1;\r\n    \r\n    .user-type {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 10px;\r\n      \r\n      .user-icon {\r\n        width: 36px;\r\n        height: 36px;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-right: 12px;\r\n        \r\n        i {\r\n          color: white;\r\n          font-size: 18px;\r\n        }\r\n      }\r\n      \r\n      .user-info {\r\n        flex: 1;\r\n        \r\n        .user-name {\r\n          font-size: 14px;\r\n          color: rgba(255, 255, 255, 0.7);\r\n          margin-bottom: 5px;\r\n        }\r\n        \r\n        .user-count {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n    \r\n    .distribution-bar {\r\n      .progress-track {\r\n        height: 8px;\r\n        width: 100%;\r\n        background: rgba(255, 255, 255, 0.1);\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        position: relative;\r\n        \r\n        .progress-fill {\r\n          height: 100%;\r\n          border-radius: 4px;\r\n          transition: width 0.5s;\r\n        }\r\n        \r\n        .percentage-text {\r\n          position: absolute;\r\n          right: 5px;\r\n          top: -20px;\r\n          font-size: 14px;\r\n          font-weight: 500;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import { render } from \"./UserActivityChart.vue?vue&type=template&id=425ca688&scoped=true\"\nimport script from \"./UserActivityChart.vue?vue&type=script&lang=js\"\nexport * from \"./UserActivityChart.vue?vue&type=script&lang=js\"\n\nimport \"./UserActivityChart.vue?vue&type=style&index=0&id=425ca688&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-425ca688\"]])\n\nexport default __exports__"],"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","statsItems","item","index","key","style","_normalizeStyle","backgroundColor","color","_normalizeClass","icon","_hoisted_5","_hoisted_6","_toDisplayString","label","_hoisted_7","value","_hoisted_8","timeFilters","filter","active","currentFilter","onClick","$event","setTimeFilter","_hoisted_9","_hoisted_10","_hoisted_11","userDistribution","_hoisted_12","_hoisted_13","_hoisted_14","name","_hoisted_15","count","_hoisted_16","_hoisted_17","width","percentage","background","_hoisted_18","setup","chartContainer","chart","totalUsers","activeUsers","totalLogins","computed","reactive","updateChartData","timeLabels","teacherData","studentData","generateHourLabels","generateUserActivityData","generateWeekLabels","generateMonthLabels","setOption","xAxis","data","series","labels","now","Date","hour","getHours","i","h","push","days","day","getDay","today","getDate","date","setDate","getMonth","baseValue","variance","timeFactor","randomFactor","Math","random","round","initChart","echarts","option","tooltip","trigger","axisPointer","type","lineStyle","legend","right","top","textStyle","itemWidth","itemHeight","grid","left","bottom","containLabel","boundaryGap","axisLine","axisLabel","fontSize","axisTick","show","yAxis","nameTextStyle","padding","splitLine","stack","smooth","symbol","symbolSize","showSymbol","areaStyle","offset","itemStyle","borderColor","borderWidth","emphasis","focus","updateData","parseInt","replace","floor","toString","forEach","teacher","student","total","timer","setInterval","clearInterval","handleResize","resize","onMounted","cleanup","window","addEventListener","onUnmounted","removeEventListener","dispose","__exports__","render"],"sourceRoot":""}