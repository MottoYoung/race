{"version":3,"file":"js/775.97070b34.js","mappings":"qyCA4NAA,EAAAA,GAAGC,WAAW,CACZC,SAAS,EACTC,OAAO,IAIT,MAAMC,GAAwB,IAAIC,IAE5BC,GAAoBC,IACxB,IAAKA,EAAK,MAAO,GAGjB,GAAIH,GAAsBI,IAAID,GAC5B,OAAOH,GAAsBK,IAAIF,GAGnC,MAAMG,EAASV,EAAAA,GAAGW,eAAeJ,EAAK,CACpCK,UAAU,EACVC,cAAe,CACbC,MAAM,EACNC,MAAM,KAMV,OADAX,GAAsBY,IAAIT,EAAKG,GACxBA,CAAM,E,uCAaf,MAAMO,EAAaC,UACjB,IAEEC,GAAU,gBAAiB,QAAQ,GAGnC,MAAMC,QAAiBC,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,cAGzB,IAAKP,EAASQ,GAAI,CAChB,MAAMC,QAAkBT,EAASU,OACjC,MAAM,IAAIC,MAAMF,EAAUG,OAAS,OACrC,CAGA,MAAMC,QAAab,EAASa,QAG5BC,EAAAA,EAAAA,QAAOD,EAAM,WAGbd,GAAU,aAAc,WAAW,EACrC,CAAE,MAAOa,GACPG,QAAQH,MAAM,cAAeA,GAE7Bb,GAAU,SAASa,EAAMI,UAAW,SAAS,EAC/C,GAGIC,GAAgBC,EAAAA,EAAAA,IAAI,IACpBC,GAAuBD,EAAAA,EAAAA,IAAI,MAC3BE,GAAWF,EAAAA,EAAAA,IAAI,IACfG,IAAWH,EAAAA,EAAAA,IAAI,IACfI,IAASJ,EAAAA,EAAAA,IAAIK,aAAaC,QAAQ,WAAaC,KAAKC,MAAMC,YAC3DJ,aAAaC,QAAQ,WACxBD,aAAaK,QAAQ,SAAUN,GAAOO,OAExC,MAAMC,IAAkBZ,EAAAA,EAAAA,IAAI,MAEtBa,IAAUb,EAAAA,EAAAA,KAAI,GACdc,IAAad,EAAAA,EAAAA,IAAI,MACjBe,IAAYf,EAAAA,EAAAA,KAAI,GAChBgB,IAAehB,EAAAA,EAAAA,KAAK,GACpBiB,IAAiBjB,EAAAA,EAAAA,IAAI,IACrBkB,IAAYlB,EAAAA,EAAAA,KAAI,GAChBmB,IAAcnB,EAAAA,EAAAA,KAAI,GAClBoB,IAAWpB,EAAAA,EAAAA,KAAI,GACfqB,IAAkBrB,EAAAA,EAAAA,IAAI,MAC5B,IAAIsB,GAAiB,KAGrB,MAAMC,IAAevB,EAAAA,EAAAA,IAAI,IAEzB,SAASwB,GAAsBC,GAC7B,IAAKA,EAAiB,MAAO,GAG7B,GAAIA,EAAgBC,SAAS,MAC3B,OAAOD,EAIT,IAAIE,EAAYF,EAAgBG,QAC9B,uBACA,SAAUC,EAAOC,GACf,MAAO,OAAOA,EAAGC,YACnB,IAQF,OAJAJ,EAAYA,EAAUC,QAAQ,uBAAuB,SAAUC,EAAOC,GACpE,MAAO,IAAIA,EAAGC,SAChB,IAEOJ,CACT,CAEA,MAAMK,GAAaA,KACbX,GAAgBV,QAClBW,GAAiB,IAAIW,IAAJ,CAAWZ,GAAgBV,MAAO,CACjDuB,MAAO,CACLC,GAAI,eACJC,QAAQ,GAEVC,OAAQ,OACRC,KAAM,UACNC,QAAS,CACP,WACA,OACA,SACA,SACA,IACA,OACA,QACA,OACA,eACA,QACA,OACA,cACA,IACA,OACA,QACA,QACA,IACA,UACA,cAEFC,QAAS,CACPC,KAAM,CACJC,OAAQ,QACRC,aAAa,GAEfC,SAAU,CACRC,WAAW,EACXC,aAAa,GAEfC,KAAM,CACJX,QAAQ,EACRY,YAAY,IAGhBC,MAAQtC,IAENM,GAAeN,MAAQA,CAAK,EAE9BuC,MAAOA,MACLC,EAAAA,EAAAA,KAAS,KAEP,MAAMC,EAAmB5B,GAAsBP,GAAeN,OAC1DW,IACFA,GAAe+B,SAASD,EAC1B,GACA,IAGR,GAIFE,EAAAA,EAAAA,IAAMvC,IAAY9C,IACZA,GACFkF,EAAAA,EAAAA,KAAS,KACPnB,IAAY,IAGdV,IAAgBiC,SAClB,IAGF,MAAMC,IAAQxD,EAAAA,EAAAA,IAAI,CAChByD,MAAM,EACN3D,QAAS,GACT4D,KAAM,OACNC,UAAW,OAGP9E,GAAYA,CAACiB,EAAS4D,EAAO,OAAQE,GAAY,KAGnDJ,GAAM7C,MAAM8C,MACZD,GAAM7C,MAAMb,UAAYA,GACxB0D,GAAM7C,MAAM+C,OAASA,IAMnBF,GAAM7C,MAAMgD,WACdE,aAAaL,GAAM7C,MAAMgD,WAI3BH,GAAM7C,MAAQ,CACZ8C,MAAM,EACN3D,UACA4D,OACAC,UAAW,MAITC,IACFJ,GAAM7C,MAAMgD,UAAYG,YAAW,KACjCN,GAAM7C,MAAM8C,MAAO,CAAK,GACvB,MACL,EAGFM,EAAAA,GAAOpG,WAAW,CAChBqG,UAAWA,CAACvF,EAAMwF,KAChB,MAAMC,EAAWnB,EAAAA,EAAKoB,YAAYF,GAAQA,EAAO,YACjD,OAAOlB,EAAAA,EAAKiB,UAAUvF,EAAM,CAAEyF,aAAYvD,KAAK,EAEjDyD,QAAQ,EACRC,KAAK,IAGP,MAAMC,IAAatE,EAAAA,EAAAA,KAAI,GACjBuE,IAAkBvE,EAAAA,EAAAA,KAAI,GAGtBwE,GAAiBA,KAEjB1D,GAAWH,OAAS2D,GAAW3D,OACjC8D,OAAOC,uBAAsB,KAC3B,MAAMC,EAAY7D,GAAWH,MAC7BgE,EAAUC,SAAS,CACjBC,IAAKF,EAAUG,aACfC,SAAU,UACV,GAEN,GAIFC,EAAAA,EAAAA,KAAU,KAER,MAAMC,EAAQ5E,aAAaC,QAAQ,sBACnC,GAAI2E,EAAO,CACT,MAAMC,EAAU/F,KAAKgG,MAAMF,GAC3BlF,EAAcY,MAAQuE,EAAQE,KAAKC,IAAI,IAClCA,EACHC,UAAW,IAAI/E,KAAK8E,EAAKC,WACzBnF,SAAUkF,EAAKlF,SAASiF,KAAKG,IAAG,IAC3BA,EACHD,UAAW,IAAI/E,KAAKgF,EAAID,mBAIxBvF,EAAcY,MAAM6E,OAAS,IAC/BvF,EAAqBU,MAAQZ,EAAcY,MAAM,GAAGwB,KAItDgB,EAAAA,EAAAA,KAAS,KACPqB,KAEAV,WAAWU,GAAgB,IAAI,GAEnC,CAGI1D,GAAWH,OACbG,GAAWH,MAAM8E,iBAAiB,SAAUC,IAI9C,MAAMC,EAAQC,SAASC,cAAc,mBACrC,GAAIF,EAAO,CACT,MAAMG,EAAOH,EAAMI,YACnBJ,EAAMK,UAAY,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKN,OAAQS,IAAK,CACpC,MAAMC,EAAON,SAASO,cAAc,QACpCD,EAAKH,YAAcD,EAAKG,GACxBC,EAAKE,MAAMC,eAAwB,GAAJJ,EAAH,IAC5BC,EAAKI,UAAUC,IAAI,kBACnBZ,EAAMa,YAAYN,EACpB,CACF,CAGAO,KACAhC,OAAOgB,iBAAiB,UAAWgB,IACnChC,OAAOgB,iBAAiB,cAAegB,IAGvCC,GAAgB/F,MAAQ,IAAIgG,sBACzBC,IACCA,EAAQC,SAASC,IAEXA,EAAMC,gBACRD,EAAME,OAAOV,UAAUC,IAAI,UAC7B,GACA,GAEJ,CAAEU,KAAMnG,GAAWH,MAAOuG,UAAW,MAIvC/D,EAAAA,EAAAA,KAAS,KACPyC,SAASuB,iBAAiB,YAAYN,SAAStB,IAC7CmB,GAAgB/F,MAAMyG,QAAQ7B,EAAI,GAClC,GACF,KAGJ8B,EAAAA,EAAAA,KAAgB,KAEVvG,GAAWH,OACbG,GAAWH,MAAM2G,oBAAoB,SAAU5B,IAEjDjB,OAAO6C,oBAAoB,UAAWb,IACtChC,OAAO6C,oBAAoB,cAAeb,IAGtCC,GAAgB/F,OAClB+F,GAAgB/F,MAAM4G,YACxB,IAEF,MAAMC,IAAcxH,EAAAA,EAAAA,IAA2C,UAAvCK,aAAaC,QAAQ,eAEvCmG,GAAiBA,KACrBe,GAAY7G,MAA+C,UAAvCN,aAAaC,QAAQ,aAAyB,EAI9DoF,GAAeA,KACnB,IAAK5E,GAAWH,QAAUE,GAAQF,MAAO,OAEzC,MAAMgE,EAAY7D,GAAWH,MACvB8G,EACJ9C,EAAUG,aAAeH,EAAU+C,UAAY/C,EAAUgD,aAAe,GAGrEF,GAAelD,GAAgB5D,QAClC4D,GAAgB5D,OAAQ,EACxB2D,GAAW3D,OAAQ,GAIjB8G,GAAclD,GAAgB5D,QAChC4D,GAAgB5D,OAAQ,EACxB2D,GAAW3D,OAAQ,EACrB,EAIIiH,GAAwBA,KAC5B,MAAMC,EAAQtH,KAAKC,MAAMC,WAAaqH,KAAKC,SAAStH,SAAS,IAAIuH,OAAO,EAAG,GACrEC,EAAU,CACd9F,GAAI0F,EACJlC,MAAO,MAAM5F,EAAcY,MAAM6E,OAAS,IAC1CF,UAAW,IAAI/E,KACfJ,SAAU,IAsBZ,OApBAJ,EAAcY,MAAMuH,QAAQD,GAC5BhI,EAAqBU,MAAQkH,EAC7B1H,GAASQ,MAAQ,GAGjBO,GAAUP,OAAQ,EAGlBwH,KAGIpH,GAAUJ,QACZI,GAAUJ,OAAQ,IAIpBwC,EAAAA,EAAAA,KAAS,KACPqB,IAAgB,IAGXqD,CAAK,EAGRO,GAAsBjG,IAC1B,GAAItB,GAAQF,MAEV,YADA9B,GAAU,YAAa,QAIzBoB,EAAqBU,MAAQwB,EAC7B,MAAMkD,EAAOtF,EAAcY,MAAM0H,MAAMC,GAAMA,EAAEnG,KAAOA,IAClDkD,IACFlF,GAASQ,MAAQ0E,EAAKlF,SAGtBe,GAAUP,OAAQ,EACdP,GAAOO,OAASwB,GAElBpD,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBmJ,QAASnI,GAAOO,MAChB6H,gBAAiBrG,MAGlBsG,MAAMC,GAAQA,EAAIlJ,SAClBiJ,MAAME,IACLzH,GAAUP,MAAQgI,EAAKC,SAAS,IAEjCC,OAAOC,IACNjJ,QAAQH,MAAM,YAAaoJ,EAAI,KAMnC/H,GAAUJ,QACZI,GAAUJ,OAAQ,IAIpBwC,EAAAA,EAAAA,KAAS,KACPqB,KAEAV,WAAWU,GAAgB,IAAI,GAC/B,EAIEuE,GAAsBC,IAC1BjJ,EAAcY,MAAQZ,EAAcY,MAAMsI,QAAQX,GAAMA,EAAEnG,KAAO6G,IAC7D/I,EAAqBU,QAAUqI,IACjC/I,EAAqBU,MAAQZ,EAAcY,MAAM,IAAIwB,IAAM,MAE7DgG,IAAoB,EAGhBe,GAAiBpJ,IACrB,MAAMqJ,EAAerJ,EAAQsJ,UAAU,EAAG,IAC1C,OAAOD,EAAa3D,OAAS1F,EAAQ0F,OACjC2D,EAAe,MACfA,CAAY,GAIlB7F,EAAAA,EAAAA,IACEnD,IACCkJ,IACC,MAAMhE,EAAOtF,EAAcY,MAAM0H,MAC9BC,GAAMA,EAAEnG,KAAOlC,EAAqBU,QAEvC,GAAI0E,EAAM,CAERA,EAAKlF,SAAW,IAAIkJ,GAGpB,MAAMC,EAAeD,EAAQhB,MAAMkB,GAAiB,SAAXA,EAAEC,OACvCF,IACFjE,EAAKM,MAAQuD,GAAcI,EAAajK,UAE1CgG,EAAKC,UAAY,IAAI/E,KACrB4H,IACF,IAEF,CAAEsB,MAAM,IAGV,MAAMtB,GAAqBA,KACzB,MAAMuB,EAAa3J,EAAcY,MAAMyE,KAAKC,IAAI,IAC3CA,EAEHC,UACED,EAAKC,qBAAqB/E,KACtB8E,EAAKC,UAAUqE,UACf,IAAIpJ,KAAK8E,EAAKC,WAAWqE,UAC/BxJ,SAAUkF,EAAKlF,SAASiF,KAAKG,IAAG,IAC3BA,EACHD,UACEC,EAAID,qBAAqB/E,KACrBgF,EAAID,UAAUqE,UACd,IAAIpJ,KAAKgF,EAAID,WAAWqE,kBAKlCtJ,aAAaK,QAAQ,qBAAsBvB,KAAKC,UAAUsK,GAAY,EAIlEE,GAAcC,IAClB,MAAMC,EAAaD,aAAgBtJ,KAAOsJ,EAAO,IAAItJ,KAAKwJ,OAAOF,IACjE,OAAOC,EAAWE,mBAAmB,QAAS,CAC5CC,KAAM,UACNC,OAAQ,WACR,EAIEC,IAAYnK,EAAAA,EAAAA,IAAI,MAGhBoK,GAAoBA,KACxBD,GAAUxJ,MAAM0J,OAAO,EAInBC,GAAmB1L,UACvB,MAAM2L,EAAQC,EAAMxD,OAAOuD,MAC3B,GAAKA,GAA0B,IAAjBA,EAAM/E,OAApB,CAEKvF,EAAqBU,QACxBiH,WACMzE,EAAAA,EAAAA,OAGR,IACEtE,GAAU,YAAa,QAEvB,MAAM4L,EAAW,IAAIC,SAGfC,EAAe,CACnB,kBACA,qBACA,0EACA,gCACA,4EACA,aACA,iBAIF,IAAIC,EAAa,EACjB,IAAK,IAAI3E,EAAI,EAAGA,EAAIsE,EAAM/E,OAAQS,IAAK,CACrC,MAAM4E,EAAON,EAAMtE,GAGhB0E,EAAajJ,SAASmJ,EAAKnH,OAC3BmH,EAAKC,KAAKC,SAAS,QACnBF,EAAKC,KAAKC,SAAS,SACnBF,EAAKC,KAAKC,SAAS,SACnBF,EAAKC,KAAKC,SAAS,SACnBF,EAAKC,KAAKC,SAAS,UAKtBN,EAASO,OAAO,QAASH,GACzBD,KAJE/L,GAAU,aAAagM,EAAKC,OAAQ,QAKxC,CAEA,GAAmB,IAAfF,EAEF,YADA/L,GAAU,aAAc,SAI1B4L,EAASO,OAAO,UAAW5K,GAAOO,OAClC8J,EAASO,OAAO,kBAAmB/K,EAAqBU,OAExD8J,EAASO,OAAO,gBAAiB,QAEjCnL,QAAQoL,IAAI,aACZpL,QAAQoL,IAAI,QAAS7K,GAAOO,OAC5Bd,QAAQoL,IAAI,QAAShL,EAAqBU,OAC1Cd,QAAQoL,IAAI,SAAUL,GAGtB,MAAM9L,QAAiBC,MAAM,wCAAyC,CACpEC,OAAQ,OACRE,KAAMuL,IAGR,IAAK3L,EAASQ,GAAI,CAChB,MAAMC,QAAkBT,EAASU,OACjC,MAAM,IAAIC,MAAMF,EAAUO,SAAW,OACvC,CAEA,MAAM1B,QAAeU,EAASU,OAG9B,GAFAK,QAAQoL,IAAI,QAAS7M,GAEC,YAAlBA,EAAO8M,OAkCT,MAAM,IAAIzL,MAAMrB,EAAO0B,SAAW,QAlCH,CAC/BjB,GAAU,GAAGT,EAAO0B,UAAW,WAC/BoB,GAAUP,OAAQ,EAClBR,GAASQ,MAAMwK,KAAK,CAClB3B,KAAM,YACNnK,QAAS,0DACKuL,0CAERQ,MAAMC,KAAKd,GACVtB,QACE4B,GACCF,EAAajJ,SAASmJ,EAAKnH,OAC3BmH,EAAKC,KAAKC,SAAS,QACnBF,EAAKC,KAAKC,SAAS,UAEtB3F,KACEyF,GAAS,OAAOA,EAAKC,SAASQ,GAAeT,EAAKU,gBAEpDC,KAAK,uCAGZlG,UAAW,IAAI/E,OAGjB,MAAM8E,EAAOtF,EAAcY,MAAM0H,MAC9BC,GAAMA,EAAEnG,KAAOlC,EAAqBU,QAEnC0E,IACFA,EAAKlF,SAAW,IAAIA,GAASQ,OAC7BwH,MAGF3D,IACF,CAGF,CAAE,MAAO9E,GACPG,QAAQH,MAAM,UAAWA,GACzBb,GAAU,SAASa,EAAMI,UAAW,QACtC,CAAE,QAEA0K,EAAMxD,OAAOrG,MAAQ,GACrBY,GAAaZ,MAAQ,OACrBmD,YAAW,KACTvC,GAAaZ,MAAQ,EAAE,GACtB,IACL,CAtHwC,CAsHxC,EAII2K,GAAkBG,GAClBA,EAAQ,KAAaA,EAAQ,KACxBA,EAAQ,SAAiBA,EAAQ,MAAMC,QAAQ,GAAK,OAChDD,EAAQ,SAASC,QAAQ,GAAK,MAGvCC,GAAgBC,IACpB7K,GAAUJ,OAAQ,EAClBK,GAAaL,MAAQiL,EACrB3K,GAAeN,MAAQR,GAASQ,MAAMiL,GAAOvM,OAAO,EAGhDwM,GAAcA,KAClB,GAAI7K,GAAaL,OAAS,EAAG,CAE3B,MAAMmL,EAAgBxK,GAClBA,GAAeyK,WACf9K,GAAeN,MAEnBR,GAASQ,MAAMK,GAAaL,OAAOtB,QAAUyM,CAC/C,CACAE,IAAe,EAEXC,GAAmBL,IACvBzL,GAASQ,MAAMiL,GAAOM,eAAiB/L,GAASQ,MAAMiL,GAAOM,aAAa,EAGtEC,GAAgBA,KACpB/K,GAAST,OAASS,GAAST,MAE3BQ,GAAYR,MAAQS,GAAST,KAAK,EAK9BqL,GAAgBA,KACpBjL,GAAUJ,OAAQ,EAClBK,GAAaL,OAAS,EACtBM,GAAeN,MAAQ,EAAE,EAErByL,GAAYxN,UACZgC,GAAgBD,QAClBC,GAAgBD,MAAM0L,QACtBzL,GAAgBD,MAAQ,MAI1BE,GAAQF,OAAQ,EAChBR,GAASQ,MAAMR,GAASQ,MAAM6E,OAAS,GAAG8G,aAAc,EACxDzN,GAAU,QAAS,QAGnB,UACQE,MAAM,uCAAwC,CAClDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBmJ,QAASnI,GAAOO,MAChB6H,gBAAiBvI,EAAqBU,MACtC4L,cAAe,UAGrB,CAAE,MAAOC,GACP3M,QAAQH,MAAM,UAAW8M,EAC3B,GAEIC,GAAc7N,UAGlB,GAFA2F,GAAgB5D,OAAQ,EACxB2D,GAAW3D,OAAQ,EACdT,EAASS,MAAMoB,SAAUlB,GAAQF,MAAtC,CACKV,EAAqBU,OAAUZ,EAAcY,MAAM6E,SACtDoC,WACMzE,EAAAA,EAAAA,OAERqB,KACArE,GAASQ,MAAMwK,KAAK,CAClB3B,KAAM,OACNnK,QAASa,EAASS,MAClB2E,UAAW,IAAI/E,OAEbK,GAAgBD,OAClBC,GAAgBD,MAAM0L,QAExBzL,GAAgBD,MAAQ,IAAI+L,gBAC5B,IACE7L,GAAQF,OAAQ,EAChB,MAAMgM,EAAgB1M,EAAqBU,MAErCiM,EAAY,CAChBpD,KAAM,YACNnK,QAAS,GACTwN,UAAW,GACXvH,UAAW,IAAI/E,KACf+L,aAAa,EACbJ,eAAe,EACfY,cAAe,GACfC,aAAc,GACdC,gBAAiB,GACjBC,sBAAuB,GACvBC,iBAAiB,EACjBC,mBAAmB,EACnBC,aAAc,EACdC,iBAAkB,MAEpBlN,GAASQ,MAAMwK,KAAKyB,GAGpBA,EAAUS,iBAAmBC,aAAY,KACnCV,EAAUN,YACZM,EAAUQ,cAAgBR,EAAUQ,aAAe,GAAK,EAExDG,cAAcX,EAAUS,iBAC1B,GACC,KAGH,MAAMG,EAAczN,EAAcY,MAAM0H,MACrCC,GAAMA,EAAEnG,KAAOlC,EAAqBU,QAEjC8M,EAAUD,EACZA,EAAYrN,SAASiF,KAAKG,IAAG,CAC3BiE,KAAMjE,EAAIiE,KACVnK,QAASkG,EAAIlG,YAEf,GAGCoO,EAAQC,MAAMnI,GAAqB,WAAbA,EAAIiE,QAC7BiE,EAAQvF,QAAQ,CACdsB,KAAM,SACNnK,QACE,mKAON,MAAMP,QAAiBC,MAAM,sCAAuC,CAClEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBoJ,gBAAiBvI,EAAqBU,MACtCb,QAASI,EAASS,MAClB4H,QAASnI,GAAOO,MAChB4L,cAAe,SACfkB,QAASA,EACTE,OAAQ/M,GAAgBD,MAAMgN,WAI5BC,EAAS9O,EAASI,KAAK2O,YACvBC,EAAU,IAAIC,YACpB,IAAIC,GAAI,EACJC,EAAS,GACTC,EAAgB,GAChBC,EAAkB,GAClBC,EAAc,KAGlB,MAAMC,EAAgBA,KACpB,MAAMC,EAAanO,GAASQ,MAAMR,GAASQ,MAAM6E,OAAS,GAEtD2I,IAEGG,EAAWtB,kBACdsB,EAAWtB,gBAAkB,IAI/BsB,EAAWrB,uBACRqB,EAAWrB,uBAAyB,IAAMkB,EAC7CA,EAAkB,GAGbG,EAAWnB,mBACdoB,GAAkBD,IAIlBJ,IAEGI,EAAWxB,gBACdwB,EAAWxB,cAAgB,IAI7BwB,EAAWvB,cACRuB,EAAWvB,cAAgB,IAAMmB,EACpCA,EAAgB,GAEZI,EAAWhC,cACbgC,EAAWhC,aAAc,GAItBgC,EAAWpB,iBACdsB,GAAgBF,IAKpB9J,IAAgB,EAGlB,MAAOwJ,EAAG,CACR,MAAM,KAAES,EAAI,MAAE9N,SAAgBiN,EAAOc,OACrC,GAAID,EAAM,MAEV,GAAIxO,EAAqBU,QAAUgM,EAAe,CAChD9M,QAAQoL,IAAI,gBACZ2C,EAAOe,SACP,KACF,CAIA,IAAIC,EAFJX,GAAUH,EAAQe,OAAOlO,EAAO,CAAEmO,QAAQ,IAG1C,OAAQF,EAAgBX,EAAOc,QAAQ,UAAY,EAAG,CACpD,MAAMC,EAAYf,EAAOgB,MAAM,EAAGL,GAClCX,EAASA,EAAOgB,MAAML,EAAgB,GAEtC,MAAMM,EAAQF,EAAUG,MAAM,MAC9B,IAAIC,EAAU,GACd,IAAK,MAAMC,KAAQH,EACbG,EAAKC,WAAW,YAClBF,GAAWC,EAAKJ,MAAM,IAI1B,GAAIG,EACF,IACE,MAAMzG,EAAOxJ,KAAKgG,MAAMiK,GAExB,GAAIzG,EAAKjJ,MACP,MAAM,IAAID,MAAMkJ,EAAKjJ,OAGnBiJ,EAAK4G,oBACPpB,GAAmBxF,EAAK4G,mBAGtB5G,EAAKtJ,UACP6O,GAAiBvF,EAAKtJ,SAIxBwE,aAAauK,GACbA,EAActK,WAAWuK,EAAe,IAC1C,CAAE,MAAO7B,GACP3M,QAAQH,MAAM,QAAS8M,EACzB,CAEJ,CACF,EAGI2B,GAAmBD,IACrBG,GAEJ,CAAE,MAAO3O,GACY,eAAfA,EAAMoL,MACRjM,GAAU,QAAS,QAErBgB,QAAQH,MAAM,QAASA,GACvBS,GAASQ,MAAMR,GAASQ,MAAM6E,OAAS,GAAGnG,QACxC,SAAWK,EAAMI,OACrB,CAAE,QACAe,GAAQF,OAAQ,EAChBT,EAASS,MAAQ,GAGjBR,GAASQ,MAAMkG,SAAStB,IAClBA,EAAI8H,mBACNE,cAAchI,EAAI8H,kBAClB9H,EAAI8H,iBAAmB,KACzB,UAGI7I,IACR,CArNmD,CAqNnD,GAEFlB,EAAAA,EAAAA,IAAMrD,GAAuBuP,IAC3B,MAAMnK,EAAOtF,EAAcY,MAAM0H,MAAMC,GAAMA,EAAEnG,KAAOqN,IACtDrP,GAASQ,MAAQ0E,GAAMlF,UAAY,EAAE,IAGvC,MAAMsP,GAAc5F,IAElB,IAAKA,EAAM,MAAO,QAGlB,MAAM6F,EAAW7F,aAAgBtJ,KAAOsJ,EAAO,IAAItJ,KAAKsJ,GAGxD,OAAI8F,MAAMD,EAAS/F,YACjB9J,QAAQH,MAAM,UAAWmK,GAClB,QAGF6F,EAAS1F,mBAAmB,QAAS,CAC1CC,KAAM,UACNC,OAAQ,WACR,EAYExD,KADkB1G,EAAAA,EAAAA,IAAI,KACJA,EAAAA,EAAAA,IAAI,QAG5BsD,EAAAA,EAAAA,IACEnD,IACA,MACEgD,EAAAA,EAAAA,KAAS,KAEP,MAAMyM,EAAkBhK,SAASuB,iBAC/B,2BAEFyI,EAAgB/I,SAASgJ,IACvBA,EAAGvJ,UAAUC,IAAI,YACbG,GAAgB/F,OAClB+F,GAAgB/F,MAAMyG,QAAQyI,EAChC,GACA,GACF,GAEJ,CAAEpG,MAAM,IAIV,MAAM8E,GAAqBzO,IACzB,IACGA,EAAQmN,uBACgC,IAAzCnN,EAAQmN,sBAAsBzH,OAG9B,YADA1F,EAAQqN,mBAAoB,GAI9BrN,EAAQqN,mBAAoB,EAG5B,MAAM2C,EAAWhQ,EAAQmN,sBAAsB8C,OAAO,GACtDjQ,EAAQkN,iBAAmB8C,EAC3BhQ,EAAQ+M,UAAY/M,EAAQkN,gBAC5BlN,EAAQmN,sBAAwBnN,EAAQmN,sBAAsB7D,UAAU,GAGxE,IAAI4G,EAAQ,EAGR,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAMtO,SAASoO,KAChDE,EAAQ,IAIVlM,YAAW,IAAMyK,GAAkBzO,IAAUkQ,GAG7CxL,IAAgB,EAIZgK,GAAmB1O,IACvB,IAAKA,EAAQiN,cAAgD,IAAhCjN,EAAQiN,aAAavH,OAEhD,YADA1F,EAAQoN,iBAAkB,GAI5BpN,EAAQoN,iBAAkB,EAG1B,MAAM4C,EAAWhQ,EAAQiN,aAAagD,OAAO,GAC7CjQ,EAAQgN,eAAiBgD,EACzBhQ,EAAQT,QAAUS,EAAQgN,cAC1BhN,EAAQiN,aAAejN,EAAQiN,aAAa3D,UAAU,GAGtD,IAAI4G,EAAQ,GAGR,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAMtO,SAASoO,KAChDE,EAAQ,IAIVlM,YAAW,IAAM0K,GAAgB1O,IAAUkQ,GAG3CxL,IAAgB,E,47JC/uClB,MAAMyL,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://vue/./src/views/main/functions/mainExercise.vue","webpack://vue/./src/views/main/functions/mainExercise.vue?c6d4"],"sourcesContent":["<template>\r\n  <div class=\"app-container\" :class=\"{ 'light-mode': isLightMode }\">\r\n    <div v-if=\"toast.show\" class=\"toast\" :class=\"toast.type\">\r\n      {{ toast.message }}\r\n    </div>\r\n    <!-- 主内容区域 -->\r\n    <div class=\"main-content\">\r\n      <!-- 侧边栏移到主内容区域内 -->\r\n      <div\r\n        class=\"sidebar\"\r\n        :class=\"{ collapsed: isCollapsed, hidden: isHidden }\"\r\n      >\r\n        <div class=\"sidebar-header\">\r\n          <h2>历史对话</h2>\r\n          <button @click=\"createNewConversation\" class=\"new-chat-btn\">\r\n            <span class=\"btn-icon\">+</span>\r\n            <span class=\"btn-text\" v-if=\"!isCollapsed\">新建对话</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"conversation-list\" v-show=\"!isCollapsed\">\r\n          <div\r\n            v-for=\"conv in conversations\"\r\n            :key=\"conv.id\"\r\n            class=\"conversation-item\"\r\n            :class=\"{ active: activeConversationId === conv.id }\"\r\n            @click=\"switchConversation(conv.id)\"\r\n          >\r\n            <div class=\"conv-info\">\r\n              <div class=\"conv-title\">{{ conv.title }}</div>\r\n              <div class=\"conv-time\">{{ formatDate(conv.timestamp) }}</div>\r\n            </div>\r\n            <button\r\n              class=\"delete-btn\"\r\n              @click.stop=\"deleteConversation(conv.id)\"\r\n            >\r\n              <span class=\"delete-icon\">×</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 修改chat-container的class绑定 -->\r\n      <div\r\n        class=\"chat-container\"\r\n        :class=\"{ 'editing-mode': isEditing, 'sidebar-expanded': !isHidden }\"\r\n      >\r\n        <div class=\"conversation-pane\">\r\n          <header class=\"chat-header\">\r\n            <!-- 将折叠按钮移到这里 -->\r\n            <button @click=\"toggleSidebar\" class=\"toggle-sidebar-btn\">\r\n              <span v-if=\"isHidden\">☰</span>\r\n              <span v-else>✕</span>\r\n            </button>\r\n            <div class=\"header-decoration\"></div>\r\n            <h1>智能试题生成</h1>\r\n            <div class=\"branding\">\r\n              <span class=\"ai-logo\">AI</span>\r\n              <span class=\"powered-by\">Powered by DeepSeek</span>\r\n            </div>\r\n          </header>\r\n\r\n          <div class=\"chat-window\" ref=\"chatWindow\">\r\n            <div\r\n              v-for=\"(msg, index) in messages\"\r\n              :key=\"index\"\r\n              :class=\"['message', msg.role]\"\r\n            >\r\n              <div class=\"message-content\">\r\n                <div class=\"avatar\" :class=\"msg.role\">\r\n                  <img src=\"../../../assets/img/logo.png\" alt=\"Avatar\" />\r\n                </div>\r\n                <div class=\"bubble\">\r\n                  <div class=\"text\">\r\n                    <template v-if=\"msg.role === 'assistant'\">\r\n                      <!-- 思考过程部分 -->\r\n                      <div\r\n                        class=\"thinking-process\"\r\n                        v-if=\"msg.reasoning && msg.reasoning.trim()\"\r\n                      >\r\n                        <div\r\n                          class=\"thinking-header\"\r\n                          @click=\"toggleReasoning(index)\"\r\n                        >\r\n                          <span class=\"thinking-icon\">💡</span> 思考过程\r\n                          <span class=\"toggle-icon\">{{\r\n                            msg.showReasoning ? \"▼\" : \"▶\"\r\n                          }}</span>\r\n                        </div>\r\n                        <!-- 将思考过程内容放在思考过程盒子内 -->\r\n                        <div\r\n                          class=\"reasoning-content\"\r\n                          v-if=\"msg.showReasoning\"\r\n                          v-html=\"compiledMarkdown(msg.reasoning)\"\r\n                        ></div>\r\n                      </div>\r\n\r\n                      <!-- 正式回答部分 - 使用白色背景 -->\r\n                      <div\r\n                        class=\"correct-answer\"\r\n                        v-if=\"msg.content && msg.content.trim()\"\r\n                      >\r\n                        <div class=\"correct-answer-label\">\r\n                          <span class=\"correct-answer-icon\">📝</span> 正式回答\r\n                        </div>\r\n                        <div\r\n                          class=\"correct-answer-content\"\r\n                          v-html=\"compiledMarkdown(msg.content)\"\r\n                        ></div>\r\n                      </div>\r\n\r\n                      <!-- 正在回答的提示 -->\r\n                      <div\r\n                        class=\"answering-indicator\"\r\n                        v-if=\"msg.isAnswering && !msg.content\"\r\n                      >\r\n                        <div class=\"dot-flashing-small\"></div>\r\n                        <span\r\n                          >AI 正在思考{{ \".\".repeat(msg.thinkingDots) }}</span\r\n                        >\r\n                      </div>\r\n                    </template>\r\n\r\n                    <div\r\n                      v-if=\"msg.role === 'user' && msg.content\"\r\n                      class=\"markdown-body\"\r\n                    >\r\n                      <div v-html=\"compiledMarkdown(msg.content)\"></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"message-actions\">\r\n                    <button\r\n                      class=\"edit-button\"\r\n                      v-if=\"msg.role === 'assistant'\"\r\n                      @click=\"startEditing(index)\"\r\n                    >\r\n                      <span class=\"button-icon\">✏️</span>\r\n                      编辑\r\n                    </button>\r\n                    <button\r\n                      class=\"break-button\"\r\n                      v-if=\"msg.role === 'assistant'\"\r\n                      @click=\"breaktalk(index)\"\r\n                    >\r\n                      <span class=\"button-icon\">⏹️</span>\r\n                      打断\r\n                    </button>\r\n                    <div class=\"timestamp\">{{ formatTime(msg.timestamp) }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"input-area\">\r\n            <div class=\"file-upload\">\r\n              <input\r\n                type=\"file\"\r\n                ref=\"fileInput\"\r\n                @change=\"handleFileUpload\"\r\n                :disabled=\"loading\"\r\n                multiple\r\n                style=\"display: none\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                class=\"upload-button\"\r\n                @click=\"triggerFileUpload\"\r\n              >\r\n                <span class=\"upload-icon\">📎</span>\r\n                <span class=\"upload-text\">上传文件</span>\r\n              </button>\r\n              <span class=\"upload-tip\">支持PDF/Word/PPT/TXT/MD</span>\r\n            </div>\r\n\r\n            <div class=\"text-inputer\">\r\n              <input\r\n                v-model=\"inputMsg\"\r\n                type=\"text\"\r\n                placeholder=\"请输入您的问题...\"\r\n                :disabled=\"loading\"\r\n                @keyup.enter=\"sendMessage\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"send-button\">\r\n              <button @click=\"sendMessage\" :disabled=\"!inputMsg || loading\">\r\n                <span v-if=\"!loading\" class=\"send-icon\">▶</span>\r\n                <span class=\"send-text\">{{\r\n                  loading ? \"思考中...\" : \"发送\"\r\n                }}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"loading\" class=\"loading-indicator\">\r\n            <div class=\"dot-flashing\"></div>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"isEditing\" class=\"editor-pane\">\r\n          <div class=\"editor-header\">\r\n            <h1>在线编辑</h1>\r\n            <div class=\"editor-actions\">\r\n              <button class=\"save-button\" @click=\"saveEditing\">保存</button>\r\n              <button class=\"cancel-button\" @click=\"cancelEditing\">取消</button>\r\n              <button class=\"export-button\" @click=\"saveToWord(editingContent)\">\r\n                导出Word\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div id=\"vditor-container\" ref=\"vditorContainer\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { MathpixMarkdownModel as MM } from \"mathpix-markdown-it\";\r\nimport \"highlight.js/styles/a11y-dark.css\";\r\nimport { marked } from \"marked\";\r\n\r\n// 配置MathpixMarkdownModel使用KaTeX\r\nMM.setOptions({\r\n  mathJax: false, // 禁用MathJax\r\n  katex: true, // 启用KaTeX\r\n});\r\n\r\n// 优化Markdown渲染函数\r\nconst compiledMarkdownCache = new Map();\r\n\r\nconst compiledMarkdown = (val) => {\r\n  if (!val) return \"\";\r\n\r\n  // 使用缓存避免重复渲染相同内容\r\n  if (compiledMarkdownCache.has(val)) {\r\n    return compiledMarkdownCache.get(val);\r\n  }\r\n\r\n  const result = MM.markdownToHTML(val, {\r\n    htmlTags: true,\r\n    codeHighlight: {\r\n      auto: true,\r\n      code: true,\r\n    },\r\n  });\r\n\r\n  // 缓存结果\r\n  compiledMarkdownCache.set(val, result);\r\n  return result;\r\n};\r\n</script>\r\n\r\n<script setup>\r\nimport { ref, nextTick, watch, onMounted, onBeforeUnmount } from \"vue\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github.css\";\r\nimport Vditor from \"vditor\";\r\nimport \"vditor/dist/index.css\";\r\n\r\nconst saveToWord = async (content) => {\r\n  try {\r\n    // 显示加载提示并阻止自动清除\r\n    showToast(\"正在生成Word文档...\", \"info\", false);\r\n\r\n    // 调用后端API\r\n    const response = await fetch(\"http://localhost:2200/math/api/export-word\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ content }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"导出失败\");\r\n    }\r\n\r\n    // 获取文件blob\r\n    const blob = await response.blob();\r\n\r\n    // 使用file-saver保存文件\r\n    saveAs(blob, \"习题.docx\");\r\n\r\n    // 导出成功后显示成功提示（自动清除）\r\n    showToast(\"Word文档导出成功\", \"success\", true);\r\n  } catch (error) {\r\n    console.error(\"导出Word文档失败:\", error);\r\n    // 出错时显示错误提示（自动清除）\r\n    showToast(`导出失败: ${error.message}`, \"error\", true);\r\n  }\r\n};\r\n\r\nconst conversations = ref([]);\r\nconst activeConversationId = ref(null);\r\nconst inputMsg = ref(\"\");\r\nconst messages = ref([]);\r\nconst userId = ref(localStorage.getItem(\"userId\") || Date.now().toString());\r\nif (!localStorage.getItem(\"userId\")) {\r\n  localStorage.setItem(\"userId\", userId.value);\r\n}\r\nconst abortController = ref(null);\r\n\r\nconst loading = ref(false);\r\nconst chatWindow = ref(null);\r\nconst isEditing = ref(false);\r\nconst editingIndex = ref(-1);\r\nconst editingContent = ref(\"\");\r\nconst have_file = ref(false);\r\nconst isCollapsed = ref(true);\r\nconst isHidden = ref(true);\r\nconst vditorContainer = ref(null);\r\nlet vditorInstance = null;\r\n\r\n// 在 setup 函数中添加 uploadStatus 变量\r\nconst uploadStatus = ref(\"\"); // 添加上传状态变量\r\n\r\nfunction convertMathpixToLatex(mathpixMarkdown) {\r\n  if (!mathpixMarkdown) return \"\";\r\n\r\n  // 先检查内容中是否已经包含 $$ 格式的公式，避免重复转换导致嵌套\r\n  if (mathpixMarkdown.includes(\"$$\")) {\r\n    return mathpixMarkdown;\r\n  }\r\n\r\n  // 处理块级公式 \\[ ... \\] 转换为 $$ ... $$\r\n  let converted = mathpixMarkdown.replace(\r\n    /\\\\\\[([\\s\\S]*?)\\\\\\]/g,\r\n    function (match, p1) {\r\n      return `\\n$$${p1.trim()}$$\\n`; // 确保前后有换行\r\n    }\r\n  );\r\n\r\n  // 处理行内公式 \\( ... \\) 转换为 $ ... $\r\n  converted = converted.replace(/\\\\\\(([\\s\\S]*?)\\\\\\)/g, function (match, p1) {\r\n    return `$${p1.trim()}$`;\r\n  });\r\n\r\n  return converted;\r\n}\r\n\r\nconst initVditor = () => {\r\n  if (vditorContainer.value) {\r\n    vditorInstance = new Vditor(vditorContainer.value, {\r\n      cache: {\r\n        id: \"vditor-cache\",\r\n        enable: true,\r\n      },\r\n      height: \"100%\",\r\n      mode: \"wysiwyg\", // 实时预览模式\r\n      toolbar: [\r\n        \"headings\",\r\n        \"bold\",\r\n        \"italic\",\r\n        \"strike\",\r\n        \"|\",\r\n        \"line\",\r\n        \"quote\",\r\n        \"list\",\r\n        \"ordered-list\",\r\n        \"check\",\r\n        \"code\",\r\n        \"inline-code\",\r\n        \"|\",\r\n        \"link\",\r\n        \"image\",\r\n        \"table\",\r\n        \"|\",\r\n        \"formula\", // 数学公式按钮\r\n        \"fullscreen\",\r\n      ],\r\n      preview: {\r\n        math: {\r\n          engine: \"KaTeX\", // 使用KaTeX\r\n          inlineDigit: true,\r\n        },\r\n        markdown: {\r\n          autoSpace: true,\r\n          fixTermLink: true,\r\n        },\r\n        hljs: {\r\n          enable: true,\r\n          lineNumber: true,\r\n        },\r\n      },\r\n      input: (value) => {\r\n        // 实时更新编辑内容\r\n        editingContent.value = value;\r\n      },\r\n      after: () => {\r\n        nextTick(() => {\r\n          // 先转换Mathpix格式为标准LaTeX格式\r\n          const convertedContent = convertMathpixToLatex(editingContent.value);\r\n          if (vditorInstance) {\r\n            vditorInstance.setValue(convertedContent);\r\n          }\r\n        });\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// 监听编辑状态\r\nwatch(isEditing, (val) => {\r\n  if (val) {\r\n    nextTick(() => {\r\n      initVditor();\r\n    });\r\n  } else {\r\n    vditorInstance?.destroy();\r\n  }\r\n});\r\n\r\nconst toast = ref({\r\n  show: false,\r\n  message: \"\",\r\n  type: \"info\", // info/success/error\r\n  timeoutId: null, // 添加这个属性来跟踪超时ID\r\n});\r\n\r\nconst showToast = (message, type = \"info\", autoClear = true) => {\r\n  // 如果已经有一个显示中的相同消息和类型的提示，不要重新创建\r\n  if (\r\n    toast.value.show &&\r\n    toast.value.message === message &&\r\n    toast.value.type === type\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  // 清除任何现有的超时\r\n  if (toast.value.timeoutId) {\r\n    clearTimeout(toast.value.timeoutId);\r\n  }\r\n\r\n  // 设置新的提示\r\n  toast.value = {\r\n    show: true,\r\n    message,\r\n    type,\r\n    timeoutId: null,\r\n  };\r\n\r\n  // 如果需要自动清除，设置超时\r\n  if (autoClear) {\r\n    toast.value.timeoutId = setTimeout(() => {\r\n      toast.value.show = false;\r\n    }, 3000);\r\n  }\r\n};\r\n// 配置 Markdown 解析器\r\nmarked.setOptions({\r\n  highlight: (code, lang) => {\r\n    const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\r\n    return hljs.highlight(code, { language }).value;\r\n  },\r\n  breaks: true,\r\n  gfm: true,\r\n});\r\n// 添加一个变量来控制是否自动滚动\r\nconst autoScroll = ref(true);\r\nconst userHasScrolled = ref(false);\r\n\r\n// 修改滚动到底部的函数\r\nconst scrollToBottom = () => {\r\n  // 使用requestAnimationFrame来优化滚动性能\r\n  if (chatWindow.value && autoScroll.value) {\r\n    window.requestAnimationFrame(() => {\r\n      const container = chatWindow.value;\r\n      container.scrollTo({\r\n        top: container.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 添加滚动事件监听\r\nonMounted(() => {\r\n  // 修改本地存储键名，添加功能前缀\r\n  const saved = localStorage.getItem(\"math_conversations\");\r\n  if (saved) {\r\n    const rawData = JSON.parse(saved);\r\n    conversations.value = rawData.map((conv) => ({\r\n      ...conv,\r\n      timestamp: new Date(conv.timestamp), // 恢复会话时间\r\n      messages: conv.messages.map((msg) => ({\r\n        ...msg,\r\n        timestamp: new Date(msg.timestamp), // 恢复消息时间\r\n      })),\r\n    }));\r\n\r\n    if (conversations.value.length > 0) {\r\n      activeConversationId.value = conversations.value[0].id;\r\n    }\r\n\r\n    // 确保在DOM更新后滚动到底部\r\n    nextTick(() => {\r\n      scrollToBottom();\r\n      // 添加一个延迟再次滚动，确保所有内容都已完全渲染\r\n      setTimeout(scrollToBottom, 300);\r\n    });\r\n  }\r\n\r\n  // 添加滚动事件监听\r\n  if (chatWindow.value) {\r\n    chatWindow.value.addEventListener(\"scroll\", handleScroll);\r\n  }\r\n\r\n  // 添加动态标题效果\r\n  const title = document.querySelector(\".chat-header h1\");\r\n  if (title) {\r\n    const text = title.textContent;\r\n    title.innerHTML = \"\";\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      const span = document.createElement(\"span\");\r\n      span.textContent = text[i];\r\n      span.style.animationDelay = `${i * 0.1}s`;\r\n      span.classList.add(\"char-animation\");\r\n      title.appendChild(span);\r\n    }\r\n  }\r\n\r\n  // 添加主题监听\r\n  checkThemeMode();\r\n  window.addEventListener(\"storage\", checkThemeMode);\r\n  window.addEventListener(\"themeChange\", checkThemeMode);\r\n\r\n  // 设置交叉观察器来优化长消息的渲染\r\n  messageObserver.value = new IntersectionObserver(\r\n    (entries) => {\r\n      entries.forEach((entry) => {\r\n        // 为进入视口的消息添加可见类\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add(\"visible\");\r\n        }\r\n      });\r\n    },\r\n    { root: chatWindow.value, threshold: 0.1 }\r\n  );\r\n\r\n  // 观察现有消息\r\n  nextTick(() => {\r\n    document.querySelectorAll(\".message\").forEach((msg) => {\r\n      messageObserver.value.observe(msg);\r\n    });\r\n  });\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  // 移除事件监听\r\n  if (chatWindow.value) {\r\n    chatWindow.value.removeEventListener(\"scroll\", handleScroll);\r\n  }\r\n  window.removeEventListener(\"storage\", checkThemeMode);\r\n  window.removeEventListener(\"themeChange\", checkThemeMode);\r\n\r\n  // 断开交叉观察器\r\n  if (messageObserver.value) {\r\n    messageObserver.value.disconnect();\r\n  }\r\n});\r\nconst isLightMode = ref(localStorage.getItem(\"theme-mode\") === \"light\");\r\n// 添加检查主题的方法\r\nconst checkThemeMode = () => {\r\n  isLightMode.value = localStorage.getItem(\"theme-mode\") === \"light\";\r\n};\r\n\r\n// 处理滚动事件\r\nconst handleScroll = () => {\r\n  if (!chatWindow.value || !loading.value) return;\r\n\r\n  const container = chatWindow.value;\r\n  const isAtBottom =\r\n    container.scrollHeight - container.scrollTop - container.clientHeight < 50;\r\n\r\n  // 如果用户向上滚动，暂停自动滚动\r\n  if (!isAtBottom && !userHasScrolled.value) {\r\n    userHasScrolled.value = true;\r\n    autoScroll.value = false;\r\n  }\r\n\r\n  // 如果用户滚动到底部，恢复自动滚动\r\n  if (isAtBottom && userHasScrolled.value) {\r\n    userHasScrolled.value = false;\r\n    autoScroll.value = true;\r\n  }\r\n};\r\n\r\n// 创建新对话\r\nconst createNewConversation = () => {\r\n  const newId = Date.now().toString() + Math.random().toString(36).substr(2, 9);\r\n  const newConv = {\r\n    id: newId,\r\n    title: `对话 ${conversations.value.length + 1}`,\r\n    timestamp: new Date(),\r\n    messages: [],\r\n  };\r\n  conversations.value.unshift(newConv);\r\n  activeConversationId.value = newId;\r\n  messages.value = [];\r\n\r\n  // 重置文件上传状态\r\n  have_file.value = false;\r\n\r\n  // 保存到本地存储\r\n  saveToLocalStorage();\r\n\r\n  // 如果正在编辑，退出编辑模式\r\n  if (isEditing.value) {\r\n    isEditing.value = false;\r\n  }\r\n\r\n  // 确保在DOM更新后滚动到底部\r\n  nextTick(() => {\r\n    scrollToBottom();\r\n  });\r\n\r\n  return newId;\r\n};\r\n\r\nconst switchConversation = (id) => {\r\n  if (loading.value) {\r\n    showToast(\"请等待当前对话完成\", \"info\");\r\n    return;\r\n  }\r\n\r\n  activeConversationId.value = id;\r\n  const conv = conversations.value.find((c) => c.id === id);\r\n  if (conv) {\r\n    messages.value = conv.messages;\r\n\r\n    // 检查该对话是否有上传的文件\r\n    have_file.value = false;\r\n    if (userId.value && id) {\r\n      // 异步检查文件状态\r\n      fetch(`http://localhost:2200/math/api/check-files`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id: userId.value,\r\n          conversation_id: id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          have_file.value = data.has_files;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"检查文件状态失败:\", err);\r\n        });\r\n    }\r\n  }\r\n\r\n  // 如果正在编辑，退出编辑模式\r\n  if (isEditing.value) {\r\n    isEditing.value = false;\r\n  }\r\n\r\n  // 确保在DOM更新后滚动到底部\r\n  nextTick(() => {\r\n    scrollToBottom();\r\n    // 添加一个延迟再次滚动，确保所有内容都已完全渲染\r\n    setTimeout(scrollToBottom, 300);\r\n  });\r\n};\r\n\r\n// 删除对话\r\nconst deleteConversation = (convId) => {\r\n  conversations.value = conversations.value.filter((c) => c.id !== convId);\r\n  if (activeConversationId.value === convId) {\r\n    activeConversationId.value = conversations.value[0]?.id || null;\r\n  }\r\n  saveToLocalStorage();\r\n};\r\n// 自动生成标题\r\nconst generateTitle = (message) => {\r\n  const firstMessage = message.substring(0, 30);\r\n  return firstMessage.length < message.length\r\n    ? firstMessage + \"...\"\r\n    : firstMessage;\r\n};\r\n\r\n// 发送消息时更新对话\r\nwatch(\r\n  messages,\r\n  (newMsgs) => {\r\n    const conv = conversations.value.find(\r\n      (c) => c.id === activeConversationId.value\r\n    );\r\n    if (conv) {\r\n      // 直接保存Date对象，不进行转换\r\n      conv.messages = [...newMsgs];\r\n\r\n      // 自动更新标题\r\n      const firstUserMsg = newMsgs.find((m) => m.role === \"user\");\r\n      if (firstUserMsg) {\r\n        conv.title = generateTitle(firstUserMsg.content);\r\n      }\r\n      conv.timestamp = new Date(); // 保持为Date对象\r\n      saveToLocalStorage(); // 调用统一保存方法\r\n    }\r\n  },\r\n  { deep: true }\r\n);\r\n// 本地存储 - 修改键名\r\nconst saveToLocalStorage = () => {\r\n  const dataToSave = conversations.value.map((conv) => ({\r\n    ...conv,\r\n    // 添加安全转换\r\n    timestamp:\r\n      conv.timestamp instanceof Date\r\n        ? conv.timestamp.getTime()\r\n        : new Date(conv.timestamp).getTime(),\r\n    messages: conv.messages.map((msg) => ({\r\n      ...msg,\r\n      timestamp:\r\n        msg.timestamp instanceof Date\r\n          ? msg.timestamp.getTime()\r\n          : new Date(msg.timestamp).getTime(),\r\n    })),\r\n  }));\r\n\r\n  // 使用带前缀的键名\r\n  localStorage.setItem(\"math_conversations\", JSON.stringify(dataToSave));\r\n};\r\n\r\n// 时间格式化\r\nconst formatDate = (date) => {\r\n  const actualDate = date instanceof Date ? date : new Date(Number(date));\r\n  return actualDate.toLocaleTimeString(\"zh-CN\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n};\r\n\r\n// 添加文件输入引用\r\nconst fileInput = ref(null);\r\n\r\n// 添加触发文件选择对话框的方法\r\nconst triggerFileUpload = () => {\r\n  fileInput.value.click();\r\n};\r\n\r\n// 修改文件上传处理函数\r\nconst handleFileUpload = async (event) => {\r\n  const files = event.target.files;\r\n  if (!files || files.length === 0) return;\r\n\r\n  if (!activeConversationId.value) {\r\n    createNewConversation();\r\n    await nextTick();\r\n  }\r\n\r\n  try {\r\n    showToast(\"正在上传文件...\", \"info\");\r\n\r\n    const formData = new FormData();\r\n\r\n    // 检查文件类型 - 更新允许的文件类型列表\r\n    const allowedTypes = [\r\n      \"application/pdf\",\r\n      \"application/msword\",\r\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n      \"application/vnd.ms-powerpoint\",\r\n      \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\r\n      \"text/plain\",\r\n      \"text/markdown\",\r\n    ];\r\n\r\n    // 添加所有选择的文件\r\n    let validFiles = 0;\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      // 检查文件类型 - 添加对PPT文件的支持\r\n      if (\r\n        !allowedTypes.includes(file.type) &&\r\n        !file.name.endsWith(\".md\") &&\r\n        !file.name.endsWith(\".txt\") &&\r\n        !file.name.endsWith(\".doc\") &&\r\n        !file.name.endsWith(\".ppt\") &&\r\n        !file.name.endsWith(\".pptx\")\r\n      ) {\r\n        showToast(`不支持的文件类型: ${file.name}`, \"error\");\r\n        continue;\r\n      }\r\n      formData.append(\"files\", file);\r\n      validFiles++;\r\n    }\r\n\r\n    if (validFiles === 0) {\r\n      showToast(\"没有有效的文件可上传\", \"error\");\r\n      return;\r\n    }\r\n\r\n    formData.append(\"user_id\", userId.value);\r\n    formData.append(\"conversation_id\", activeConversationId.value);\r\n    // 添加功能标识\r\n    formData.append(\"function_type\", \"math\");\r\n\r\n    console.log(\"开始上传文件...\");\r\n    console.log(\"用户ID:\", userId.value);\r\n    console.log(\"对话ID:\", activeConversationId.value);\r\n    console.log(\"有效文件数:\", validFiles);\r\n\r\n    // 确保使用数学题API的端口\r\n    const response = await fetch(\"http://localhost:2200/math/api/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"上传失败\");\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log(\"上传结果:\", result);\r\n\r\n    if (result.status === \"success\") {\r\n      showToast(`${result.message}`, \"success\");\r\n      have_file.value = true;\r\n      messages.value.push({\r\n        role: \"assistant\",\r\n        content: `<div class=\"file-upload-message\">\r\n          <p>📁 已上传 ${validFiles} 个文件</p>\r\n          <ul>\r\n            ${Array.from(files)\r\n              .filter(\r\n                (file) =>\r\n                  allowedTypes.includes(file.type) ||\r\n                  file.name.endsWith(\".md\") ||\r\n                  file.name.endsWith(\".txt\")\r\n              )\r\n              .map(\r\n                (file) => `<li>${file.name} (${formatFileSize(file.size)})</li>`\r\n              )\r\n              .join(\"\")}\r\n          </ul>\r\n        </div>`,\r\n        timestamp: new Date(),\r\n      });\r\n      // 保存对话历史\r\n      const conv = conversations.value.find(\r\n        (c) => c.id === activeConversationId.value\r\n      );\r\n      if (conv) {\r\n        conv.messages = [...messages.value];\r\n        saveToLocalStorage();\r\n      }\r\n\r\n      scrollToBottom();\r\n    } else {\r\n      throw new Error(result.message || \"上传失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"文件上传失败:\", error);\r\n    showToast(`上传失败: ${error.message}`, \"error\");\r\n  } finally {\r\n    // 清空文件输入，允许重新选择相同文件\r\n    event.target.value = \"\";\r\n    uploadStatus.value = \"上传成功\";\r\n    setTimeout(() => {\r\n      uploadStatus.value = \"\"; // 3秒后清除状态\r\n    }, 3000);\r\n  }\r\n};\r\n\r\n// 添加文件大小格式化函数\r\nconst formatFileSize = (bytes) => {\r\n  if (bytes < 1024) return bytes + \" B\";\r\n  else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + \" KB\";\r\n  else return (bytes / 1048576).toFixed(1) + \" MB\";\r\n};\r\n\r\nconst startEditing = (index) => {\r\n  isEditing.value = true;\r\n  editingIndex.value = index;\r\n  editingContent.value = messages.value[index].content;\r\n};\r\n\r\nconst saveEditing = () => {\r\n  if (editingIndex.value >= 0) {\r\n    // 获取编辑器的内容\r\n    const editorContent = vditorInstance\r\n      ? vditorInstance.getValue()\r\n      : editingContent.value;\r\n    // 保存到消息中\r\n    messages.value[editingIndex.value].content = editorContent;\r\n  }\r\n  cancelEditing();\r\n};\r\nconst toggleReasoning = (index) => {\r\n  messages.value[index].showReasoning = !messages.value[index].showReasoning;\r\n};\r\n// 修改折叠函数为侧边栏的显示/隐藏切换\r\nconst toggleSidebar = () => {\r\n  isHidden.value = !isHidden.value;\r\n  // 当显示侧边栏时自动展开，隐藏时自动折叠\r\n  isCollapsed.value = isHidden.value;\r\n};\r\nconst toggleCollapse = () => {\r\n  isCollapsed.value = !isCollapsed.value;\r\n};\r\nconst cancelEditing = () => {\r\n  isEditing.value = false;\r\n  editingIndex.value = -1;\r\n  editingContent.value = \"\";\r\n};\r\nconst breaktalk = async () => {\r\n  if (abortController.value) {\r\n    abortController.value.abort();\r\n    abortController.value = null; // 重置控制器\r\n  }\r\n\r\n  // 立即停止加载状态，使按钮可以响应\r\n  loading.value = false;\r\n  messages.value[messages.value.length - 1].isAnswering = false;\r\n  showToast(\"对话已打断\", \"info\");\r\n\r\n  // 通知后端终止\r\n  try {\r\n    await fetch(\"http://localhost:2200/math/api/abort\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        user_id: userId.value,\r\n        conversation_id: activeConversationId.value,\r\n        function_type: \"math\", // 添加功能标识\r\n      }),\r\n    });\r\n  } catch (e) {\r\n    console.error(\"终止请求失败:\", e);\r\n  }\r\n};\r\nconst sendMessage = async () => {\r\n  userHasScrolled.value = false;\r\n  autoScroll.value = true;\r\n  if (!inputMsg.value.trim() || loading.value) return;\r\n  if (!activeConversationId.value || !conversations.value.length) {\r\n    createNewConversation();\r\n    await nextTick(); // 等待新建对话完成\r\n  }\r\n  scrollToBottom();\r\n  messages.value.push({\r\n    role: \"user\",\r\n    content: inputMsg.value,\r\n    timestamp: new Date(),\r\n  });\r\n  if (abortController.value) {\r\n    abortController.value.abort(); // 终止之前的请求\r\n  }\r\n  abortController.value = new AbortController();\r\n  try {\r\n    loading.value = true;\r\n    const currentConvId = activeConversationId.value;\r\n    // 创建新的AI消息占位 - 修改这部分，添加新的typing相关字段\r\n    const aiMessage = {\r\n      role: \"assistant\",\r\n      content: \"\",\r\n      reasoning: \"\",\r\n      timestamp: new Date(),\r\n      isAnswering: true, // 标记为正在回答\r\n      showReasoning: true,\r\n      typingContent: \"\", // 正式回答的打字内容字段\r\n      typingBuffer: \"\", // 正式回答的打字缓冲区\r\n      typingReasoning: \"\", // 添加思考过程的打字内容字段\r\n      reasoningTypingBuffer: \"\", // 添加思考过程的打字缓冲区\r\n      isTypingContent: false, // 标记是否正在为content打字\r\n      isTypingReasoning: false, // 标记是否正在为reasoning打字\r\n      thinkingDots: 0, // 添加思考点计数\r\n      thinkingInterval: null, // 添加思考动画间隔\r\n    };\r\n    messages.value.push(aiMessage);\r\n\r\n    // 在aiMessage创建后，添加思考动画\r\n    aiMessage.thinkingInterval = setInterval(() => {\r\n      if (aiMessage.isAnswering) {\r\n        aiMessage.thinkingDots = (aiMessage.thinkingDots + 1) % 4;\r\n      } else {\r\n        clearInterval(aiMessage.thinkingInterval);\r\n      }\r\n    }, 500);\r\n\r\n    // 确保包含完整历史记录\r\n    const currentConv = conversations.value.find(\r\n      (c) => c.id === activeConversationId.value\r\n    );\r\n    const history = currentConv\r\n      ? currentConv.messages.map((msg) => ({\r\n          role: msg.role,\r\n          content: msg.content,\r\n        }))\r\n      : [];\r\n\r\n    // 如果没有系统消息，添加一个\r\n    if (!history.some((msg) => msg.role === \"system\")) {\r\n      history.unshift({\r\n        role: \"system\",\r\n        content:\r\n          \"请扮演一个ai出题助手,你必须按照用户要求的格式出题,或者严格按照用户上传的文件\" +\r\n          \"的格式出相应数量和格式的题目,你必须不能省略任何回答内容,尤其是不能省略题目的数量\" +\r\n          \"否则就会有人因为你省略题目数量和不遵照格式的行为造成过度劳累而去世\" +\r\n          \"再次强调，你绝对不能省略任何回答内容,尤其是不能省略题目的数量，在题目生成完之后给出答案\",\r\n      });\r\n    }\r\n\r\n    const response = await fetch(\"http://localhost:2200/math/api/chat\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        conversation_id: activeConversationId.value,\r\n        message: inputMsg.value,\r\n        user_id: userId.value,\r\n        function_type: \"jiaoan\",\r\n        history: history, // 添加完整历史\r\n        signal: abortController.value.signal,\r\n      }),\r\n    });\r\n\r\n    const reader = response.body.getReader();\r\n    const decoder = new TextDecoder();\r\n    let a = true;\r\n    let buffer = \"\";\r\n    let contentBuffer = \"\";\r\n    let reasoningBuffer = \"\";\r\n    let updateTimer = null;\r\n\r\n    // 修改updateMessage函数，实现逐字生成效果\r\n    const updateMessage = () => {\r\n      const currentMsg = messages.value[messages.value.length - 1];\r\n\r\n      if (reasoningBuffer) {\r\n        // 对于思考过程，使用逐字显示效果\r\n        if (!currentMsg.typingReasoning) {\r\n          currentMsg.typingReasoning = \"\";\r\n        }\r\n\r\n        // 将新内容添加到思考过程的打字缓冲区\r\n        currentMsg.reasoningTypingBuffer =\r\n          (currentMsg.reasoningTypingBuffer || \"\") + reasoningBuffer;\r\n        reasoningBuffer = \"\";\r\n\r\n        // 如果没有正在进行的思考过程打字动画，启动一个\r\n        if (!currentMsg.isTypingReasoning) {\r\n          typeReasoningChar(currentMsg);\r\n        }\r\n      }\r\n\r\n      if (contentBuffer) {\r\n        // 对于正式回答，使用逐字显示效果\r\n        if (!currentMsg.typingContent) {\r\n          currentMsg.typingContent = \"\";\r\n        }\r\n\r\n        // 将新内容添加到正式回答打字缓冲区\r\n        currentMsg.typingBuffer =\r\n          (currentMsg.typingBuffer || \"\") + contentBuffer;\r\n        contentBuffer = \"\";\r\n\r\n        if (currentMsg.isAnswering) {\r\n          currentMsg.isAnswering = false;\r\n        }\r\n\r\n        // 如果没有正在进行的正式回答打字动画，启动一个\r\n        if (!currentMsg.isTypingContent) {\r\n          typeContentChar(currentMsg);\r\n        }\r\n      }\r\n\r\n      // 使用防抖处理滚动\r\n      scrollToBottom();\r\n    };\r\n\r\n    while (a) {\r\n      const { done, value } = await reader.read();\r\n      if (done) break;\r\n      // 关键检查：如果会话已切换则中止处理\r\n      if (activeConversationId.value !== currentConvId) {\r\n        console.log(\"检测到对话切换，中止处理\");\r\n        reader.cancel();\r\n        break;\r\n      }\r\n\r\n      buffer += decoder.decode(value, { stream: true });\r\n\r\n      let eventEndIndex;\r\n      while ((eventEndIndex = buffer.indexOf(\"\\n\\n\")) >= 0) {\r\n        const eventData = buffer.slice(0, eventEndIndex);\r\n        buffer = buffer.slice(eventEndIndex + 2);\r\n\r\n        const lines = eventData.split(\"\\n\");\r\n        let dataStr = \"\";\r\n        for (const line of lines) {\r\n          if (line.startsWith(\"data: \")) {\r\n            dataStr += line.slice(6);\r\n          }\r\n        }\r\n\r\n        if (dataStr) {\r\n          try {\r\n            const data = JSON.parse(dataStr);\r\n\r\n            if (data.error) {\r\n              throw new Error(data.error);\r\n            }\r\n\r\n            if (data.reasoning_content) {\r\n              reasoningBuffer += data.reasoning_content;\r\n            }\r\n\r\n            if (data.content) {\r\n              contentBuffer += data.content;\r\n            }\r\n\r\n            // 使用防抖更新UI，减少渲染次数\r\n            clearTimeout(updateTimer);\r\n            updateTimer = setTimeout(updateMessage, 100);\r\n          } catch (e) {\r\n            console.error(\"解析错误:\", e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // 确保最后的内容被更新\r\n    if (reasoningBuffer || contentBuffer) {\r\n      updateMessage();\r\n    }\r\n  } catch (error) {\r\n    if (error.name === \"AbortError\") {\r\n      showToast(\"对话已终止\", \"info\");\r\n    }\r\n    console.error(\"请求失败:\", error);\r\n    messages.value[messages.value.length - 1].content =\r\n      \"请求失败: \" + error.message;\r\n  } finally {\r\n    loading.value = false;\r\n    inputMsg.value = \"\";\r\n\r\n    // 清除所有消息的思考动画\r\n    messages.value.forEach((msg) => {\r\n      if (msg.thinkingInterval) {\r\n        clearInterval(msg.thinkingInterval);\r\n        msg.thinkingInterval = null;\r\n      }\r\n    });\r\n\r\n    await scrollToBottom();\r\n  }\r\n};\r\nwatch(activeConversationId, (newVal) => {\r\n  const conv = conversations.value.find((c) => c.id === newVal);\r\n  messages.value = conv?.messages || [];\r\n});\r\n\r\nconst formatTime = (date) => {\r\n  // 处理可能的null/undefined\r\n  if (!date) return \"--:--\";\r\n\r\n  // 统一转换为Date对象\r\n  const safeDate = date instanceof Date ? date : new Date(date);\r\n\r\n  // 有效性验证\r\n  if (isNaN(safeDate.getTime())) {\r\n    console.error(\"无效的时间值:\", date);\r\n    return \"时间错误\";\r\n  }\r\n\r\n  return safeDate.toLocaleTimeString(\"zh-CN\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n};\r\n\r\n// 添加恢复自动滚动的方法\r\nconst resumeAutoScroll = () => {\r\n  autoScroll.value = true;\r\n  userHasScrolled.value = false;\r\n  scrollToBottom();\r\n};\r\n\r\n// 添加虚拟滚动优化\r\nconst visibleMessages = ref([]);\r\nconst messageObserver = ref(null);\r\n\r\n// 监听消息变化，为新消息添加观察\r\nwatch(\r\n  messages,\r\n  () => {\r\n    nextTick(() => {\r\n      // 为新添加的消息元素添加观察\r\n      const messageElements = document.querySelectorAll(\r\n        \".message:not(.observed)\"\r\n      );\r\n      messageElements.forEach((el) => {\r\n        el.classList.add(\"observed\");\r\n        if (messageObserver.value) {\r\n          messageObserver.value.observe(el);\r\n        }\r\n      });\r\n    });\r\n  },\r\n  { deep: true }\r\n);\r\n\r\n// 添加思考过程的逐字打字效果函数\r\nconst typeReasoningChar = (message) => {\r\n  if (\r\n    !message.reasoningTypingBuffer ||\r\n    message.reasoningTypingBuffer.length === 0\r\n  ) {\r\n    message.isTypingReasoning = false;\r\n    return;\r\n  }\r\n\r\n  message.isTypingReasoning = true;\r\n\r\n  // 从缓冲区取出第一个字符\r\n  const nextChar = message.reasoningTypingBuffer.charAt(0);\r\n  message.typingReasoning += nextChar;\r\n  message.reasoning = message.typingReasoning;\r\n  message.reasoningTypingBuffer = message.reasoningTypingBuffer.substring(1);\r\n\r\n  // 根据字符类型调整延迟时间\r\n  let delay = 8; // 基础延迟时间，可以比content稍快一些\r\n\r\n  // 标点符号后面稍微停顿长一点\r\n  if ([\".\", \"!\", \"?\", \"。\", \"！\", \"？\", \"\\n\"].includes(nextChar)) {\r\n    delay = 40;\r\n  }\r\n\r\n  // 递归调用，实现连续打字效果\r\n  setTimeout(() => typeReasoningChar(message), delay);\r\n\r\n  // 每添加一个字符就滚动到底部\r\n  scrollToBottom();\r\n};\r\n\r\n// 修改为专门处理正式回答的打字效果函数\r\nconst typeContentChar = (message) => {\r\n  if (!message.typingBuffer || message.typingBuffer.length === 0) {\r\n    message.isTypingContent = false;\r\n    return;\r\n  }\r\n\r\n  message.isTypingContent = true;\r\n\r\n  // 从缓冲区取出第一个字符\r\n  const nextChar = message.typingBuffer.charAt(0);\r\n  message.typingContent += nextChar;\r\n  message.content = message.typingContent;\r\n  message.typingBuffer = message.typingBuffer.substring(1);\r\n\r\n  // 根据字符类型调整延迟时间\r\n  let delay = 10; // 基础延迟时间\r\n\r\n  // 标点符号后面稍微停顿长一点\r\n  if ([\".\", \"!\", \"?\", \"。\", \"！\", \"？\", \"\\n\"].includes(nextChar)) {\r\n    delay = 50;\r\n  }\r\n\r\n  // 递归调用，实现连续打字效果\r\n  setTimeout(() => typeContentChar(message), delay);\r\n\r\n  // 每添加一个字符就滚动到底部\r\n  scrollToBottom();\r\n};\r\n\r\n// 替换原来的typeNextChar函数\r\n// const typeNextChar = (message) => {\r\n//   // ... 原有代码 ...\r\n// };\r\n</script>\r\n\r\n<style scoped>\r\n/* 基础风格 - 夜间模式 */\r\n.app-container {\r\n  display: flex;\r\n  height: 100%;\r\n  background: #0f172a; /* 更深邃的蓝黑色背景 */\r\n  color: #e2e8f0;\r\n  font-family: \"SF Pro Display\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    Roboto, sans-serif;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: background-color 0.4s cubic-bezier(0.22, 1, 0.36, 1),\r\n    color 0.4s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n/* 日间模式 */\r\n.app-container.light-mode {\r\n  background: #f8fafc;\r\n  color: #1e293b;\r\n}\r\n\r\n/* 确保顶层容器占满父元素空间 */\r\n:deep(.el-card__body) {\r\n  height: 100%;\r\n  padding: 0 !important;\r\n  background: #0f172a; /* 匹配新的背景色 */\r\n  transition: background-color 0.4s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n.light-mode :deep(.el-card__body) {\r\n  background: #f8fafc;\r\n}\r\n\r\n/* 提示信息样式 */\r\n.toast {\r\n  position: fixed;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  padding: 12px 24px;\r\n  border-radius: 12px;\r\n  z-index: 9999;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\r\n  animation: toastSlideDown 0.5s cubic-bezier(0.22, 1, 0.36, 1) forwards;\r\n  max-width: 90%;\r\n  text-align: center;\r\n  backdrop-filter: blur(8px);\r\n}\r\n\r\n.toast.info {\r\n  background: rgba(56, 189, 248, 0.15);\r\n  color: #38bdf8;\r\n  border: 1px solid rgba(56, 189, 248, 0.3);\r\n}\r\n\r\n.toast.success {\r\n  background: rgba(34, 197, 94, 0.15);\r\n  color: #22c55e;\r\n  border: 1px solid rgba(34, 197, 94, 0.3);\r\n}\r\n\r\n.toast.error {\r\n  background: rgba(239, 68, 68, 0.15);\r\n  color: #ef4444;\r\n  border: 1px solid rgba(239, 68, 68, 0.3);\r\n}\r\n\r\n/* 侧边栏样式 - 夜间模式 */\r\n.sidebar {\r\n  width: 280px;\r\n  background: #1e293b; /* 更深的蓝灰色 */\r\n  border-right: 1px solid #334155;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: all 0.5s cubic-bezier(0.22, 1, 0.36, 1);\r\n  position: relative;\r\n  z-index: 10;\r\n  height: 100%; /* 确保侧边栏充满高度 */\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 加强侧边栏隐藏状态 */\r\n.sidebar.hidden {\r\n  width: 0 !important;\r\n  min-width: 0 !important;\r\n  overflow: hidden !important;\r\n  border-right: none !important;\r\n  margin-left: -1px !important; /* 解决边框可能出现的问题 */\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transform: translateX(-20px);\r\n}\r\n\r\n/* 侧边栏样式 - 日间模式 */\r\n.light-mode .sidebar {\r\n  background: #ffffff;\r\n  border-right: 1px solid #e2e8f0;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.sidebar-header {\r\n  height: 70px; /* 与聊天头部高度一致 */\r\n  padding: 0 16px; /* 调整内边距 */\r\n  display: flex;\r\n  align-items: center; /* 确保垂直居中 */\r\n  justify-content: space-between;\r\n  position: relative; /* 为装饰条添加定位上下文 */\r\n}\r\n\r\n.light-mode .sidebar-header {\r\n  background: linear-gradient(135deg, #ffffff, #f1f5f9);\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.sidebar-header h2 {\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #7dd3fc; /* 亮蓝色 */\r\n  text-shadow: 0 0 8px rgba(125, 211, 252, 0.4);\r\n  transition: color 0.3s, text-shadow 0.3s;\r\n}\r\n\r\n.light-mode .sidebar-header h2 {\r\n  color: #0284c7; /* 深蓝色 */\r\n  text-shadow: none;\r\n}\r\n\r\n.sidebar.collapsed {\r\n  width: 60px;\r\n}\r\n\r\n.sidebar.collapsed .sidebar-header h2 {\r\n  display: none;\r\n}\r\n\r\n/* 新对话按钮 */\r\n.new-chat-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40px;\r\n  padding: 0 12px;\r\n  background: linear-gradient(135deg, #7dd3fc, #0ea5e9);\r\n  color: #0f172a;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  font-weight: 600;\r\n  box-shadow: 0 0 15px rgba(125, 211, 252, 0.4);\r\n  overflow: hidden;\r\n}\r\n\r\n.light-mode .new-chat-btn {\r\n  background: linear-gradient(135deg, #0ea5e9, #0284c7);\r\n  color: #ffffff;\r\n  border: none;\r\n  box-shadow: 0 4px 12px rgba(14, 165, 233, 0.3);\r\n}\r\n\r\n.sidebar.collapsed .new-chat-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  padding: 0;\r\n  border-radius: 50%;\r\n}\r\n\r\n.light-mode .sidebar.collapsed .new-chat-btn {\r\n  background: linear-gradient(135deg, #0ea5e9, #0284c7);\r\n  color: #ffffff;\r\n}\r\n\r\n.new-chat-btn:hover {\r\n  transform: translateY(-2px) scale(1.05);\r\n  box-shadow: 0 0 20px rgba(125, 211, 252, 0.6);\r\n}\r\n\r\n.light-mode .new-chat-btn:hover {\r\n  box-shadow: 0 6px 16px rgba(14, 165, 233, 0.4);\r\n}\r\n\r\n.btn-icon {\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n}\r\n\r\n.new-chat-btn:hover .btn-icon {\r\n  transform: rotate(90deg);\r\n}\r\n\r\n/* 折叠按钮 */\r\n.collapse-btn {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80%;\r\n  height: 36px;\r\n  background: rgba(125, 211, 252, 0.1);\r\n  color: #7dd3fc;\r\n  border: 1px solid rgba(125, 211, 252, 0.3);\r\n  border-radius: 18px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  font-size: 14px;\r\n}\r\n\r\n.light-mode .collapse-btn {\r\n  background: rgba(14, 165, 233, 0.1);\r\n  color: #0ea5e9;\r\n  border: 1px solid rgba(14, 165, 233, 0.3);\r\n}\r\n\r\n.sidebar.collapsed .collapse-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.light-mode .sidebar.collapsed .collapse-btn {\r\n  background: rgba(14, 165, 233, 0.1);\r\n  color: #0ea5e9;\r\n}\r\n\r\n.collapse-btn:hover {\r\n  background: rgba(125, 211, 252, 0.2);\r\n  transform: translateX(-50%) scale(1.05);\r\n}\r\n\r\n.light-mode .collapse-btn:hover {\r\n  background: rgba(14, 165, 233, 0.2);\r\n}\r\n\r\n/* 对话列表 */\r\n.conversation-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 10px 0;\r\n}\r\n\r\n.conversation-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 14px 16px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  border-radius: 10px;\r\n  margin: 6px 8px;\r\n  border-left: 3px solid transparent;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.conversation-item::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    90deg,\r\n    transparent,\r\n    rgba(125, 211, 252, 0.05),\r\n    transparent\r\n  );\r\n  transform: translateX(-100%);\r\n  transition: transform 0.6s ease;\r\n}\r\n\r\n.conversation-item:hover::before {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.light-mode .conversation-item {\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.light-mode .conversation-item::before {\r\n  background: linear-gradient(\r\n    90deg,\r\n    transparent,\r\n    rgba(14, 165, 233, 0.05),\r\n    transparent\r\n  );\r\n}\r\n\r\n.conversation-item:hover {\r\n  background: rgba(125, 211, 252, 0.08);\r\n  transform: translateX(4px);\r\n}\r\n\r\n.light-mode .conversation-item:hover {\r\n  background: rgba(14, 165, 233, 0.08);\r\n  transform: translateX(4px);\r\n}\r\n\r\n.conversation-item.active {\r\n  background: rgba(125, 211, 252, 0.12);\r\n  border-left: 3px solid #7dd3fc;\r\n}\r\n\r\n.light-mode .conversation-item.active {\r\n  background: rgba(14, 165, 233, 0.12);\r\n  border-left: 3px solid #0ea5e9;\r\n}\r\n\r\n.conv-info {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.conv-title {\r\n  font-weight: 500;\r\n  margin-bottom: 4px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #e2e8f0;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.light-mode .conv-title {\r\n  color: #1e293b;\r\n}\r\n\r\n.conv-time {\r\n  font-size: 0.8em;\r\n  color: #94a3b8;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.light-mode .conv-time {\r\n  color: #64748b;\r\n}\r\n\r\n.delete-btn {\r\n  background: none;\r\n  border: none;\r\n  color: #94a3b8;\r\n  font-size: 1.2em;\r\n  padding: 0;\r\n  opacity: 0;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  width: 28px;\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n}\r\n\r\n.light-mode .delete-btn {\r\n  color: #64748b;\r\n}\r\n\r\n.conversation-item:hover .delete-btn {\r\n  opacity: 1;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background: rgba(239, 68, 68, 0.15);\r\n  color: #ef4444;\r\n  transform: rotate(90deg);\r\n}\r\n\r\n.light-mode .delete-btn:hover {\r\n  background: rgba(239, 68, 68, 0.15);\r\n  color: #ef4444;\r\n}\r\n\r\n.delete-icon {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s;\r\n}\r\n\r\n/* 主内容区域 */\r\n.main-content {\r\n  flex: 1;\r\n  min-width: 0;\r\n  display: flex;\r\n  flex-direction: row; /* 修改为水平布局 */\r\n  height: 100%; /* 确保主内容区域占满高度 */\r\n  padding: 0;\r\n  position: relative; /* 添加相对定位 */\r\n}\r\n\r\n/* 聊天容器区域 */\r\n.chat-container {\r\n  display: flex;\r\n  flex: 1; /* 让聊天容器充满剩余空间 */\r\n\r\n  height: 100%; /* 修改为100%替代100vh */\r\n  background: #0f172a;\r\n  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);\r\n  position: relative;\r\n}\r\n\r\n/* 侧边栏展开时聊天容器样式 */\r\n.chat-container.sidebar-expanded {\r\n  flex: 1;\r\n  /* 添加侧边栏展开时的过渡效果 */\r\n  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n/* 对话面板 */\r\n.conversation-pane {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #1e293b;\r\n  position: relative;\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  max-height: 100%; /* 确保不超出容器 */\r\n  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1); /* 添加过渡效果 */\r\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 修改聊天容器在日间模式下的样式 */\r\n.light-mode .conversation-pane {\r\n  background-color: #ffffff;\r\n  color: #1e293b;\r\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n/* 修改聊天窗口在日间模式下的样式 */\r\n.light-mode .chat-window {\r\n  background-color: #f8fafc;\r\n}\r\n\r\n/* 修改聊天头部在日间模式下的样式 */\r\n.light-mode .chat-header {\r\n  background: linear-gradient(135deg, #ffffff, #f1f5f9);\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n/* 修改消息气泡在日间模式下的样式 */\r\n.light-mode .message .bubble {\r\n  background-color: #f1f5f9;\r\n  border: 1px solid #e2e8f0;\r\n  color: #1e293b;\r\n}\r\n\r\n.light-mode .message.assistant .bubble {\r\n  background-color: #e0f2fe;\r\n  border: 1px solid #bae6fd;\r\n}\r\n\r\n/* 修改输入区域在日间模式下的样式 */\r\n.light-mode .input-area {\r\n  background: #f1f5f9;\r\n  border-top: 1px solid #e2e8f0;\r\n}\r\n\r\n/* 修改输入框在日间模式下的样式 */\r\n.light-mode .text-inputer input {\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border: 1px solid #cbd5e1;\r\n  color: #1e293b;\r\n}\r\n\r\n/* 修改按钮在日间模式下的样式 */\r\n.light-mode .upload-button {\r\n  background: rgba(14, 165, 233, 0.1);\r\n  color: #0ea5e9;\r\n  border: 1px solid rgba(14, 165, 233, 0.3);\r\n}\r\n\r\n/* 修改发送按钮在日间模式下的样式 */\r\n.light-mode .send-button button {\r\n  background: linear-gradient(135deg, #0ea5e9, #0284c7);\r\n  color: white;\r\n}\r\n\r\n/* 编辑模式 */\r\n.chat-container.editing-mode {\r\n  flex-direction: row;\r\n}\r\n\r\n.chat-container.editing-mode .conversation-pane {\r\n  flex: 1.1;\r\n  margin-right: 0;\r\n  border-radius: 16px 0 0 16px;\r\n  transform: translateX(-10px);\r\n  transition: transform 0.5s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n.chat-container.editing-mode .editor-pane {\r\n  flex: 0.9;\r\n  background: #1e293b;\r\n  border-radius: 0 16px 16px 0;\r\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);\r\n  border-left: 1px solid #334155;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  transform: translateX(10px);\r\n  animation: slideInEditor 0.5s cubic-bezier(0.22, 1, 0.36, 1) forwards;\r\n}\r\n\r\n@keyframes slideInEditor {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n/* 聊天头部 */\r\n.chat-header {\r\n  height: 70px;\r\n  padding: 0 24px 0 70px; /* 增加左侧padding以容纳折叠按钮 */\r\n  background: #0f172a;\r\n  color: #e2e8f0;\r\n  display: flex;\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid #334155;\r\n  overflow: hidden;\r\n}\r\n\r\n.header-decoration {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 3px;\r\n  background: linear-gradient(90deg, #7dd3fc, #0ea5e9, #0284c7);\r\n  opacity: 0.8;\r\n  animation: gradientShift 8s linear infinite;\r\n}\r\n\r\n@keyframes gradientShift {\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n}\r\n\r\n/* 添加侧边栏折叠/展开按钮样式 */\r\n.toggle-sidebar-btn {\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 36px;\r\n  height: 36px;\r\n  background: rgba(125, 211, 252, 0.1);\r\n  color: #7dd3fc;\r\n  border: 1px solid rgba(125, 211, 252, 0.3);\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  font-size: 18px;\r\n  z-index: 5;\r\n}\r\n\r\n/* 修改按钮hover效果增强用户体验 */\r\n.toggle-sidebar-btn:hover {\r\n  background: rgba(125, 211, 252, 0.2);\r\n  transform: translateY(-50%) scale(1.1);\r\n  box-shadow: 0 0 15px rgba(125, 211, 252, 0.4);\r\n}\r\n\r\n.light-mode .toggle-sidebar-btn {\r\n  background: rgba(14, 165, 233, 0.1);\r\n  color: #0ea5e9;\r\n  border: 1px solid rgba(14, 165, 233, 0.3);\r\n}\r\n\r\n.light-mode .toggle-sidebar-btn:hover {\r\n  background: rgba(14, 165, 233, 0.2);\r\n  box-shadow: 0 0 15px rgba(14, 165, 233, 0.3);\r\n}\r\n\r\n.chat-header h1 {\r\n  font-size: 1.8rem;\r\n  font-weight: 800;\r\n  margin: 0;\r\n  background: linear-gradient(90deg, #7dd3fc, #0ea5e9);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  position: relative;\r\n  animation: titlePulse 3s ease-in-out infinite;\r\n}\r\n\r\n@keyframes titlePulse {\r\n  0%,\r\n  100% {\r\n    opacity: 1;\r\n    filter: brightness(1);\r\n  }\r\n  50% {\r\n    opacity: 0.9;\r\n    filter: brightness(1.2);\r\n  }\r\n}\r\n\r\n.chat-header h1::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: -3px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 1px;\r\n  background: linear-gradient(90deg, transparent, #7dd3fc, transparent);\r\n}\r\n.chat-header {\r\n  border-radius: 0;\r\n}\r\n/* 字符动画 */\r\n.char-animation {\r\n  display: inline-block;\r\n  opacity: 0;\r\n  transform: translateY(10px);\r\n  animation: charFadeIn 0.5s forwards;\r\n}\r\n\r\n@keyframes charFadeIn {\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 品牌信息 */\r\n.branding {\r\n  position: absolute;\r\n  right: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.ai-logo {\r\n  background: linear-gradient(135deg, #7dd3fc, #0ea5e9);\r\n  color: #0f172a;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  box-shadow: 0 0 15px rgba(125, 211, 252, 0.4);\r\n  animation: pulseLogo 3s infinite alternate;\r\n}\r\n\r\n@keyframes pulseLogo {\r\n  0% {\r\n    transform: scale(1);\r\n    box-shadow: 0 0 15px rgba(125, 211, 252, 0.4);\r\n  }\r\n  100% {\r\n    transform: scale(1.1);\r\n    box-shadow: 0 0 20px rgba(125, 211, 252, 0.6);\r\n  }\r\n}\r\n\r\n.powered-by {\r\n  font-size: 0.8rem;\r\n  color: #94a3b8;\r\n}\r\n\r\n/* 聊天窗口 */\r\n.chat-window {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 24px;\r\n  background: #0f172a;\r\n  scroll-behavior: smooth;\r\n  background-image: radial-gradient(\r\n      circle at 10% 20%,\r\n      rgba(125, 211, 252, 0.03) 0%,\r\n      transparent 20%\r\n    ),\r\n    radial-gradient(\r\n      circle at 90% 80%,\r\n      rgba(125, 211, 252, 0.03) 0%,\r\n      transparent 20%\r\n    ),\r\n    radial-gradient(\r\n      circle at 50% 50%,\r\n      rgba(125, 211, 252, 0.02) 0%,\r\n      transparent 50%\r\n    );\r\n  min-height: 0; /* 允许flex收缩 */\r\n}\r\n\r\n/* 消息样式 */\r\n.message {\r\n  margin-bottom: 30px;\r\n  animation: messageFadeIn 0.5s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n@keyframes messageFadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.message-content {\r\n  display: flex;\r\n  gap: 16px;\r\n  max-width: 90%;\r\n}\r\n\r\n.message.assistant .message-content {\r\n  flex-direction: row;\r\n}\r\n\r\n.message.user .message-content {\r\n  flex-direction: row-reverse;\r\n  margin-left: auto;\r\n}\r\n\r\n/* 头像 */\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  flex-shrink: 0;\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n}\r\n\r\n.message:hover .avatar {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.avatar.assistant {\r\n  border: 1px solid rgba(125, 211, 252, 0.4);\r\n  box-shadow: 0 0 10px rgba(125, 211, 252, 0.2);\r\n}\r\n\r\n.avatar.user {\r\n  border: 1px solid rgba(168, 85, 247, 0.4);\r\n  box-shadow: 0 0 10px rgba(168, 85, 247, 0.2);\r\n}\r\n\r\n.avatar img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n/* 消息气泡 */\r\n.bubble {\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n  position: relative;\r\n  max-width: 100%;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.assistant .bubble {\r\n  background: rgba(15, 23, 42, 0.8);\r\n  border: 1px solid rgba(125, 211, 252, 0.2);\r\n  min-width: 50%;\r\n}\r\n\r\n.user .bubble {\r\n  background: rgba(79, 70, 229, 0.15);\r\n  color: #e2e8f0;\r\n  border: 1px solid rgba(168, 85, 247, 0.3);\r\n}\r\n\r\n.bubble:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.assistant .bubble:hover {\r\n  border-color: rgba(125, 211, 252, 0.4);\r\n}\r\n\r\n.user .bubble:hover {\r\n  border-color: rgba(168, 85, 247, 0.5);\r\n}\r\n\r\n/* 思考过程容器样式 */\r\n.thinking-process {\r\n  margin-bottom: 15px;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  background-color: #0f172a;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n.thinking-process:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 思考过程标题样式 */\r\n.thinking-header {\r\n  padding: 12px 16px;\r\n  background: rgba(125, 211, 252, 0.08);\r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  transition: background 0.3s;\r\n}\r\n\r\n.thinking-header:hover {\r\n  background: rgba(125, 211, 252, 0.12);\r\n}\r\n\r\n.thinking-icon {\r\n  margin-right: 8px;\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n}\r\n\r\n.thinking-header:hover .thinking-icon {\r\n  transform: rotate(20deg);\r\n}\r\n\r\n.toggle-icon {\r\n  margin-left: auto;\r\n  transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n/* 思考过程内容样式 */\r\n.reasoning-content {\r\n  padding: 16px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  background-color: #0f172a;\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  animation: contentExpand 0.4s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n@keyframes contentExpand {\r\n  from {\r\n    opacity: 0;\r\n    max-height: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    max-height: 1000px;\r\n  }\r\n}\r\n\r\n/* 正式回答容器样式 */\r\n.correct-answer {\r\n  background-color: #0f172a;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  margin-top: 10px; /* 增加与思考过程的间距 */\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* 增加阴影效果 */\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  animation: answerFadeIn 0.6s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n@keyframes answerFadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.correct-answer:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 正式回答标题样式 */\r\n.correct-answer-label {\r\n  padding: 12px 16px;\r\n  background: linear-gradient(135deg, #0f172a, #0284c7);\r\n  color: white;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.answering-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 12px 16px;\r\n  background: rgba(30, 41, 59, 0.5);\r\n  border-radius: 8px;\r\n  margin-top: 8px;\r\n  font-style: italic;\r\n  color: #94a3b8;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.light-mode .answering-indicator {\r\n  background: rgba(241, 245, 249, 0.7);\r\n  color: #64748b;\r\n}\r\n\r\n.dot-flashing-small {\r\n  position: relative;\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 3px;\r\n  background-color: #7dd3fc;\r\n  animation: dotFlashing 1s infinite linear alternate;\r\n  animation-delay: 0.5s;\r\n}\r\n\r\n.dot-flashing-small::before,\r\n.dot-flashing-small::after {\r\n  content: \"\";\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 0;\r\n}\r\n\r\n.dot-flashing-small::before {\r\n  left: -10px;\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 3px;\r\n  background-color: #7dd3fc;\r\n  animation: dotFlashing 1s infinite alternate;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.dot-flashing-small::after {\r\n  left: 10px;\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 3px;\r\n  background-color: #7dd3fc;\r\n  animation: dotFlashing 1s infinite alternate;\r\n  animation-delay: 1s;\r\n}\r\n.correct-answer-label::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 30%;\r\n  height: 100%;\r\n  background: linear-gradient(90deg, transparent, rgba(125, 211, 252, 0.2));\r\n  animation: shimmer 2s infinite;\r\n}\r\n\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%);\r\n  }\r\n  100% {\r\n    transform: translateX(200%);\r\n  }\r\n}\r\n\r\n.correct-answer-icon {\r\n  margin-right: 8px;\r\n  animation: iconFloat 3s ease-in-out infinite;\r\n}\r\n\r\n@keyframes iconFloat {\r\n  0%,\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-3px);\r\n  }\r\n}\r\n\r\n/* 正式回答内容样式 */\r\n.correct-answer-content {\r\n  padding: 16px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n}\r\n\r\n/* 修复无序列表和有序列表的样式 */\r\n.correct-answer-content ul,\r\n.correct-answer-content ol {\r\n  padding-left: 2em !important;\r\n  margin-left: 0 !important;\r\n  list-style-position: outside !important;\r\n}\r\n\r\n/* 修复列表项的样式 */\r\n.correct-answer-content li {\r\n  display: list-item !important;\r\n  margin-bottom: 0.5em !important;\r\n  padding-left: 0.5em !important;\r\n}\r\n\r\n/* 确保无序列表的圆点正确显示 */\r\n.correct-answer-content ul {\r\n  list-style-type: disc !important;\r\n}\r\n\r\n.correct-answer-content ul ul {\r\n  list-style-type: circle !important;\r\n}\r\n\r\n.correct-answer-content ul ul ul {\r\n  list-style-type: square !important;\r\n}\r\n\r\n/* 确保有序列表的数字正确显示 */\r\n.correct-answer-content ol {\r\n  list-style-type: decimal !important;\r\n}\r\n\r\n.correct-answer-content ol ol {\r\n  list-style-type: lower-alpha !important;\r\n}\r\n\r\n.correct-answer-content ol ol ol {\r\n  list-style-type: lower-roman !important;\r\n}\r\n\r\n/* 修复嵌套列表的缩进 */\r\n.correct-answer-content ul ul,\r\n.correct-answer-content ol ol,\r\n.correct-answer-content ul ol,\r\n.correct-answer-content ol ul {\r\n  margin-top: 0.5em !important;\r\n  margin-bottom: 0 !important;\r\n}\r\n\r\n/* 日间模式样式 */\r\n.light-mode .thinking-process {\r\n  background-color: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n}\r\n\r\n.light-mode .thinking-header {\r\n  background: rgba(14, 165, 233, 0.08);\r\n  color: #0f172a;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n.light-mode .reasoning-content {\r\n  background-color: #f8fafc;\r\n  color: #1e293b;\r\n}\r\n\r\n.light-mode .correct-answer {\r\n  background-color: #ffffff;\r\n  border: 1px solid #e2e8f0;\r\n  box-shadow: 0 4px 12px rgba(15, 23, 42, 0.05);\r\n}\r\n\r\n/* 清新的渐变色彩 */\r\n.light-mode .correct-answer-label {\r\n  background: linear-gradient(135deg, #0ea5e9, #0284c7);\r\n  color: white;\r\n}\r\n\r\n.light-mode .correct-answer-content {\r\n  color: #1e293b;\r\n}\r\n\r\n/* 消息操作 */\r\n.message-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin-top: 12px;\r\n}\r\n\r\n.edit-button,\r\n.break-button {\r\n  background: rgba(15, 23, 42, 0.8);\r\n  color: #94a3b8;\r\n  border: 1px solid rgba(125, 211, 252, 0.15);\r\n  border-radius: 10px;\r\n  padding: 8px 14px;\r\n  font-size: 0.85rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n}\r\n\r\n.light-mode .edit-button,\r\n.light-mode .break-button {\r\n  background: rgba(255, 255, 255, 0.8);\r\n  color: #64748b;\r\n  border: 1px solid rgba(14, 165, 233, 0.2);\r\n}\r\n\r\n.edit-button:hover {\r\n  background: rgba(125, 211, 252, 0.15);\r\n  color: #7dd3fc;\r\n  border-color: rgba(125, 211, 252, 0.3);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.break-button:hover {\r\n  background: rgba(239, 68, 68, 0.15);\r\n  color: #ef4444;\r\n  border-color: rgba(239, 68, 68, 0.3);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.button-icon {\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n}\r\n\r\n.edit-button:hover .button-icon {\r\n  transform: rotate(15deg);\r\n}\r\n\r\n.break-button:hover .button-icon {\r\n  transform: scale(1.2);\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.8rem;\r\n  color: #94a3b8;\r\n}\r\n\r\n/* 输入区域 */\r\n.input-area {\r\n  padding: 16px 24px;\r\n  background: #1e293b;\r\n  border-top: 1px solid #334155;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  gap: 16px;\r\n  align-items: center;\r\n  min-height: 80px; /* 确保最小高度 */\r\n  position: relative; /* 确保定位正确 */\r\n  z-index: 5;\r\n}\r\n\r\n.file-upload {\r\n  position: relative;\r\n}\r\n\r\n.upload-button {\r\n  background: rgba(125, 211, 252, 0.1);\r\n  color: #7dd3fc;\r\n  border: 1px solid rgba(125, 211, 252, 0.2);\r\n  padding: 10px 16px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.upload-icon {\r\n  font-size: 1.2em;\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n}\r\n\r\n.upload-button:hover .upload-icon {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.upload-button:hover {\r\n  background: rgba(125, 211, 252, 0.2);\r\n  border-color: rgba(125, 211, 252, 0.4);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.upload-tip {\r\n  font-size: 0.75em;\r\n  color: #94a3b8;\r\n  position: absolute;\r\n  bottom: -18px;\r\n  left: 12px;\r\n  white-space: nowrap;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.file-upload:hover .upload-tip {\r\n  opacity: 0.8;\r\n}\r\n\r\n.text-inputer input {\r\n  width: 100%;\r\n  padding: 14px 16px;\r\n  border: 1px solid #334155;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  background: rgba(15, 23, 42, 0.6);\r\n  color: #e2e8f0;\r\n  font-size: 1rem;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n}\r\n\r\n.text-inputer input:focus {\r\n  border-color: rgba(125, 211, 252, 0.4);\r\n  box-shadow: 0 0 0 3px rgba(125, 211, 252, 0.1);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.text-inputer input::placeholder {\r\n  color: #94a3b8;\r\n}\r\n\r\n.send-button button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  background: linear-gradient(135deg, #0ea5e9, #0284c7);\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  font-weight: 600;\r\n  min-width: 100px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.send-button button::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  background: radial-gradient(\r\n    circle,\r\n    rgba(255, 255, 255, 0.3) 0%,\r\n    transparent 70%\r\n  );\r\n  opacity: 0;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.send-button button:hover::after {\r\n  opacity: 1;\r\n}\r\n\r\n.send-button button:hover:not(:disabled) {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 6px 16px rgba(14, 165, 233, 0.4);\r\n}\r\n\r\n.send-icon {\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n}\r\n\r\n.send-button button:hover .send-icon {\r\n  transform: translateX(3px);\r\n}\r\n\r\n/* 加载指示器 */\r\n.loading-indicator {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.dot-flashing {\r\n  position: relative;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 5px;\r\n  background-color: #7dd3fc;\r\n  color: #7dd3fc;\r\n  animation: dotFlashing 1s infinite linear alternate;\r\n  animation-delay: 0.5s;\r\n}\r\n.light-mode .chat-container.editing-mode .editor-pane {\r\n  background: #ffffff;\r\n  border-left: 1px solid #e0e6f5;\r\n}\r\n.dot-flashing::before,\r\n.dot-flashing::after {\r\n  content: \"\";\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 5px;\r\n  background-color: #7dd3fc;\r\n  color: #7dd3fc;\r\n}\r\n\r\n.dot-flashing::before {\r\n  left: -15px;\r\n  animation: dotFlashing 1s infinite alternate;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.dot-flashing::after {\r\n  left: 15px;\r\n  animation: dotFlashing 1s infinite alternate;\r\n  animation-delay: 1s;\r\n}\r\n\r\n@keyframes dotFlashing {\r\n  0% {\r\n    background-color: #7dd3fc;\r\n  }\r\n  50%,\r\n  100% {\r\n    background-color: rgba(125, 211, 252, 0.2);\r\n  }\r\n}\r\n\r\n/* 编辑器面板 */\r\n.editor-header {\r\n  padding: 16px 24px;\r\n  background: #1e293b;\r\n  border-bottom: 1px solid #334155;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 70px;\r\n}\r\n\r\n.editor-header h1 {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin: 0;\r\n  background: linear-gradient(90deg, #7dd3fc, #0ea5e9);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.editor-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.editor-actions button {\r\n  padding: 8px 16px;\r\n  font-size: 0.9rem;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);\r\n  font-weight: 500;\r\n}\r\n\r\n.save-button {\r\n  background: rgba(125, 211, 252, 0.1);\r\n  color: #7dd3fc;\r\n  border: 1px solid rgba(125, 211, 252, 0.2);\r\n}\r\n\r\n.save-button:hover {\r\n  background: rgba(125, 211, 252, 0.2);\r\n  border-color: rgba(125, 211, 252, 0.4);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.cancel-button {\r\n  background: rgba(239, 68, 68, 0.1);\r\n  color: #ef4444;\r\n  border: 1px solid rgba(239, 68, 68, 0.2);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background: rgba(239, 68, 68, 0.2);\r\n  border-color: rgba(239, 68, 68, 0.4);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.export-button {\r\n  background: rgba(34, 197, 94, 0.1);\r\n  color: #22c55e;\r\n  border: 1px solid rgba(34, 197, 94, 0.2);\r\n}\r\n\r\n.export-button:hover {\r\n  background: rgba(34, 197, 94, 0.2);\r\n  border-color: rgba(34, 197, 94, 0.4);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* 优化编辑器样式 */\r\n:deep(.vditor) {\r\n  border: none !important;\r\n  height: calc(100% - 70px) !important;\r\n  background: #0f172a !important;\r\n  transition: background 0.3s !important;\r\n}\r\n\r\n:deep(.vditor-toolbar) {\r\n  background: #1e293b !important;\r\n  border-bottom: 1px solid #334155 !important;\r\n  transition: background 0.3s, border 0.3s !important;\r\n}\r\n\r\n:deep(.vditor-toolbar svg) {\r\n  fill: #94a3b8 !important;\r\n  transition: fill 0.3s !important;\r\n}\r\n\r\n:deep(.vditor-toolbar button:hover svg) {\r\n  fill: #7dd3fc !important;\r\n}\r\n\r\n:deep(.vditor-reset) {\r\n  color: #e2e8f0 !important;\r\n  background: #0f172a !important;\r\n  transition: color 0.3s, background 0.3s !important;\r\n}\r\n\r\n:deep(.vditor-reset pre) {\r\n  background: rgba(15, 23, 42, 0.8) !important;\r\n  border: 1px solid rgba(125, 211, 252, 0.2) !important;\r\n  border-radius: 10px !important;\r\n  transition: background 0.3s, border 0.3s !important;\r\n}\r\n\r\n:deep(.vditor-reset code) {\r\n  color: #7dd3fc !important;\r\n  background: rgba(15, 23, 42, 0.6) !important;\r\n  padding: 2px 6px !important;\r\n  border-radius: 4px !important;\r\n  transition: color 0.3s, background 0.3s !important;\r\n}\r\n\r\n/* 对动画生命周期的定义 */\r\n@keyframes toastSlideDown {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate(-50%, -30px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translate(-50%, 0);\r\n  }\r\n}\r\n\r\n/* 自定义滚动条 */\r\n::-webkit-scrollbar {\r\n  width: 6px;\r\n  height: 6px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: rgba(148, 163, 184, 0.3);\r\n  border-radius: 3px;\r\n  transition: background 0.3s;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: rgba(148, 163, 184, 0.5);\r\n}\r\n\r\n.control-panel {\r\n  background-color: #1e293b; /* 稍微深一点的蓝色 */\r\n  padding: 30px;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);\r\n  transition: background-color 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n/* 日间模式 */\r\n.light-mode .control-panel {\r\n  background-color: #ffffff;\r\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 修复日间模式下的整体聊天容器背景 */\r\n.light-mode .chat-container {\r\n  background: #f8fafc;\r\n}\r\n\r\n/* 修复日间模式下的聊天窗口背景图案 */\r\n.light-mode .chat-window {\r\n  background-image: radial-gradient(\r\n      circle at 10% 20%,\r\n      rgba(14, 165, 233, 0.03) 0%,\r\n      transparent 20%\r\n    ),\r\n    radial-gradient(\r\n      circle at 90% 80%,\r\n      rgba(14, 165, 233, 0.03) 0%,\r\n      transparent 20%\r\n    ),\r\n    radial-gradient(\r\n      circle at 50% 50%,\r\n      rgba(14, 165, 233, 0.02) 0%,\r\n      transparent 50%\r\n    );\r\n}\r\n\r\n/* 修复日间模式下的编辑器面板 */\r\n.light-mode .editor-pane {\r\n  background: #ffffff;\r\n  border-left: 1px solid #e2e8f0;\r\n}\r\n\r\n.light-mode .editor-header {\r\n  background: #f1f5f9;\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n/* 修复日间模式下的加载指示器 */\r\n.light-mode .loading-indicator {\r\n  color: #0ea5e9;\r\n}\r\n\r\n.light-mode .dot-flashing {\r\n  background-color: #0ea5e9;\r\n}\r\n\r\n.light-mode .dot-flashing::before,\r\n.light-mode .dot-flashing::after {\r\n  background-color: #0ea5e9;\r\n}\r\n\r\n@keyframes dotFlashingLight {\r\n  0% {\r\n    background-color: #0ea5e9;\r\n  }\r\n  50%,\r\n  100% {\r\n    background-color: rgba(14, 165, 233, 0.2);\r\n  }\r\n}\r\n\r\n.light-mode .dot-flashing,\r\n.light-mode .dot-flashing::before,\r\n.light-mode .dot-flashing::after {\r\n  animation-name: dotFlashingLight;\r\n}\r\n\r\n/* 修复日间模式下的编辑器内容区域 */\r\n.light-mode :deep(.vditor) {\r\n  border: none !important;\r\n  height: calc(100% - 70px) !important;\r\n  background: #ffffff !important;\r\n}\r\n\r\n.light-mode :deep(.vditor-toolbar) {\r\n  background: #f1f5f9 !important;\r\n  border-bottom: 1px solid #e2e8f0 !important;\r\n}\r\n\r\n.light-mode :deep(.vditor-toolbar svg) {\r\n  fill: #64748b !important;\r\n}\r\n\r\n.light-mode :deep(.vditor-toolbar button:hover svg) {\r\n  fill: #0ea5e9 !important;\r\n}\r\n\r\n.light-mode :deep(.vditor-reset) {\r\n  color: #1e293b !important;\r\n  background: #ffffff !important;\r\n}\r\n\r\n.light-mode :deep(.vditor-reset pre) {\r\n  background: rgba(241, 245, 249, 0.8) !important;\r\n  border: 1px solid rgba(14, 165, 233, 0.1) !important;\r\n}\r\n\r\n.light-mode :deep(.vditor-reset code) {\r\n  color: #0ea5e9 !important;\r\n  background: rgba(241, 245, 249, 0.6) !important;\r\n}\r\n\r\n/* 修复日间模式下的编辑器按钮 */\r\n.light-mode .editor-actions button {\r\n  background: rgba(14, 165, 233, 0.05);\r\n  color: #0ea5e9;\r\n  border: 1px solid rgba(14, 165, 233, 0.1);\r\n}\r\n\r\n.light-mode .editor-actions button:hover {\r\n  background: rgba(14, 165, 233, 0.1);\r\n}\r\n\r\n.light-mode .save-button {\r\n  background: rgba(14, 165, 233, 0.1) !important;\r\n  color: #0ea5e9 !important;\r\n  border: 1px solid rgba(14, 165, 233, 0.3) !important;\r\n}\r\n\r\n.light-mode .save-button:hover {\r\n  background: rgba(14, 165, 233, 0.2) !important;\r\n}\r\n\r\n.light-mode .cancel-button {\r\n  background: rgba(239, 68, 68, 0.1) !important;\r\n  color: #ef4444 !important;\r\n}\r\n\r\n.light-mode .export-button {\r\n  background: rgba(34, 197, 94, 0.1) !important;\r\n  color: #22c55e !important;\r\n}\r\n\r\n/* 全局覆盖 Mathpix 列表样式 */\r\n:deep(.mp-md-block-list) {\r\n  padding-left: 2em !important;\r\n  margin-left: 0 !important;\r\n}\r\n\r\n:deep(.mp-md-block-list-item) {\r\n  display: list-item !important;\r\n  padding-left: 0.5em !important;\r\n}\r\n\r\n:deep(ul),\r\n:deep(ol) {\r\n  padding-left: 2em !important;\r\n  margin-left: 0 !important;\r\n}\r\n\r\n:deep(li) {\r\n  display: list-item !important;\r\n}\r\n\r\n/* 修改对话面板在侧边栏展开时的圆角 */\r\n.chat-container.sidebar-expanded .conversation-pane {\r\n  border-radius: 0 16px 16px 0;\r\n  border-left: none; /* 移除左侧边框 */\r\n}\r\n\r\n/* 确保聊天头部在侧边栏展开时左上角没有圆角 */\r\n.chat-container.sidebar-expanded .chat-header {\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n\r\n/* 调整侧边栏背景与对话面板头部背景一致 */\r\n.sidebar-header {\r\n  background: #0f172a; /* 与聊天头部背景一致 */\r\n  border-bottom: 1px solid #334155;\r\n}\r\n\r\n/* 日间模式下的一致性调整 */\r\n.light-mode .sidebar-header {\r\n  background: linear-gradient(135deg, #ffffff, #f1f5f9);\r\n  border-bottom: 1px solid #e2e8f0;\r\n}\r\n\r\n/* 为侧边栏头部添加顶部装饰条，与聊天头部一致 */\r\n.sidebar-header::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 3px;\r\n  background: linear-gradient(90deg, #0284c7, #0ea5e9, #7dd3fc);\r\n  opacity: 0.8;\r\n  animation: gradientShift 8s linear infinite;\r\n}\r\n\r\n.answering-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 12px 16px;\r\n  background: rgba(30, 41, 59, 0.5);\r\n  border-radius: 8px;\r\n  margin-top: 8px;\r\n  font-style: italic;\r\n  color: #94a3b8;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.light-mode .answering-indicator {\r\n  background: rgba(241, 245, 249, 0.7);\r\n  color: #64748b;\r\n}\r\n\r\n/* 添加性能优化相关的CSS */\r\n.message {\r\n  will-change: transform, opacity;\r\n  contain: content;\r\n  transform: translateZ(0);\r\n}\r\n\r\n/* 优化长文本渲染 */\r\n.bubble {\r\n  contain: content;\r\n  overflow-wrap: break-word;\r\n  word-break: break-word;\r\n}\r\n\r\n/* 优化Markdown内容渲染 */\r\n.markdown-body,\r\n.correct-answer-content,\r\n.reasoning-content {\r\n  contain: content;\r\n}\r\n\r\n/* 优化滚动性能 */\r\n.chat-window {\r\n  -webkit-overflow-scrolling: touch;\r\n  overscroll-behavior: contain;\r\n  scroll-behavior: auto; /* 改为auto以提高性能 */\r\n}\r\n\r\n/* 添加渐进式加载效果 */\r\n.message:not(.visible) {\r\n  opacity: 0.6;\r\n  transform: translateY(10px);\r\n}\r\n\r\n.message.visible {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n  transition: opacity 0.3s, transform 0.3s;\r\n}\r\n\r\n/* 添加打字动画相关样式 */\r\n.typing-cursor {\r\n  display: inline-block;\r\n  width: 2px;\r\n  height: 1em;\r\n  background-color: #7dd3fc;\r\n  margin-left: 2px;\r\n  vertical-align: middle;\r\n  animation: cursor-blink 1s infinite;\r\n}\r\n\r\n@keyframes cursor-blink {\r\n  0%,\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n/* 优化思考中动画 */\r\n.answering-indicator {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 12px 16px;\r\n  background: rgba(30, 41, 59, 0.5);\r\n  border-radius: 8px;\r\n  margin-top: 8px;\r\n  font-style: italic;\r\n  color: #94a3b8;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.light-mode .answering-indicator {\r\n  background: rgba(241, 245, 249, 0.7);\r\n  color: #64748b;\r\n}\r\n</style>\r\n","import script from \"./mainExercise.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./mainExercise.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./mainExercise.vue?vue&type=style&index=0&id=d4e795ea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d4e795ea\"]])\n\nexport default __exports__"],"names":["MM","setOptions","mathJax","katex","compiledMarkdownCache","Map","compiledMarkdown","val","has","get","result","markdownToHTML","htmlTags","codeHighlight","auto","code","set","saveToWord","async","showToast","response","fetch","method","headers","body","JSON","stringify","content","ok","errorData","json","Error","error","blob","saveAs","console","message","conversations","ref","activeConversationId","inputMsg","messages","userId","localStorage","getItem","Date","now","toString","setItem","value","abortController","loading","chatWindow","isEditing","editingIndex","editingContent","have_file","isCollapsed","isHidden","vditorContainer","vditorInstance","uploadStatus","convertMathpixToLatex","mathpixMarkdown","includes","converted","replace","match","p1","trim","initVditor","Vditor","cache","id","enable","height","mode","toolbar","preview","math","engine","inlineDigit","markdown","autoSpace","fixTermLink","hljs","lineNumber","input","after","nextTick","convertedContent","setValue","watch","destroy","toast","show","type","timeoutId","autoClear","clearTimeout","setTimeout","marked","highlight","lang","language","getLanguage","breaks","gfm","autoScroll","userHasScrolled","scrollToBottom","window","requestAnimationFrame","container","scrollTo","top","scrollHeight","behavior","onMounted","saved","rawData","parse","map","conv","timestamp","msg","length","addEventListener","handleScroll","title","document","querySelector","text","textContent","innerHTML","i","span","createElement","style","animationDelay","classList","add","appendChild","checkThemeMode","messageObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","target","root","threshold","querySelectorAll","observe","onBeforeUnmount","removeEventListener","disconnect","isLightMode","isAtBottom","scrollTop","clientHeight","createNewConversation","newId","Math","random","substr","newConv","unshift","saveToLocalStorage","switchConversation","find","c","user_id","conversation_id","then","res","data","has_files","catch","err","deleteConversation","convId","filter","generateTitle","firstMessage","substring","newMsgs","firstUserMsg","m","role","deep","dataToSave","getTime","formatDate","date","actualDate","Number","toLocaleTimeString","hour","minute","fileInput","triggerFileUpload","click","handleFileUpload","files","event","formData","FormData","allowedTypes","validFiles","file","name","endsWith","append","log","status","push","Array","from","formatFileSize","size","join","bytes","toFixed","startEditing","index","saveEditing","editorContent","getValue","cancelEditing","toggleReasoning","showReasoning","toggleSidebar","breaktalk","abort","isAnswering","function_type","e","sendMessage","AbortController","currentConvId","aiMessage","reasoning","typingContent","typingBuffer","typingReasoning","reasoningTypingBuffer","isTypingContent","isTypingReasoning","thinkingDots","thinkingInterval","setInterval","clearInterval","currentConv","history","some","signal","reader","getReader","decoder","TextDecoder","a","buffer","contentBuffer","reasoningBuffer","updateTimer","updateMessage","currentMsg","typeReasoningChar","typeContentChar","done","read","cancel","eventEndIndex","decode","stream","indexOf","eventData","slice","lines","split","dataStr","line","startsWith","reasoning_content","newVal","formatTime","safeDate","isNaN","messageElements","el","nextChar","charAt","delay","__exports__"],"sourceRoot":""}